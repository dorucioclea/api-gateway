{
    "swagger": "2.0",
    "info": {
        "version": "v1",
        "title": "API Engine"
    },
    "basePath": "/API-Engine-web/v1",
    "tags": [
        {
            "name": "kong"
        },
        {
            "name": "currentuser"
        },
        {
            "name": "policyDefs"
        },
        {
            "name": "permissions"
        },
        {
            "name": "organizations"
        },
        {
            "name": "plugins"
        },
        {
            "name": "gateways"
        },
        {
            "name": "actions"
        },
        {
            "name": "roles"
        },
        {
            "name": "search"
        },
        {
            "name": "users"
        },
        {
            "name": "system"
        }
    ],
    "schemes": [
        "http"
    ],
    "paths": {
        "/actions": {
            "post": {
                "tags": [
                    "actions"
                ],
                "summary": "Execute an Entity Action",
                "description": "Call this endpoint in order to execute actions for apiman entities such as Plans, Services, or Applications.  The type of the action must be included in the request payload.",
                "operationId": "performAction",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ActionBean"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            }
        },
        "/currentuser/applications": {
            "get": {
                "tags": [
                    "currentuser"
                ],
                "summary": "Get Current User's Applications",
                "description": "Use this endpoint to list all of the Applications the current user has permission to edit.  This includes all Applications from all Organizations the user has application edit privileges for.",
                "operationId": "getApplications",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "A list of Applications.",
                        "schema": {
                            "$ref": "#/definitions/SystemStatusBean"
                        }
                    }
                }
            }
        },
        "/currentuser/apporgs": {
            "get": {
                "tags": [
                    "currentuser"
                ],
                "summary": "Get Organizations (app-edit)",
                "description": "This endpoint returns a list of all the organizations for which the current user has permission to edit applications.  For example, when creating a new Application, the user interface must ask the user to choose within which Organization to create it.  This endpoint lists the valid choices for the current user.",
                "operationId": "getAppOrganizations",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "A list of organizations.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrganizationSummaryBean"
                            }
                        }
                    }
                }
            }
        },
        "/currentuser/info": {
            "get": {
                "tags": [
                    "currentuser"
                ],
                "summary": "Get Current User Information",
                "description": "Use this endpoint to get information about the currently authenticated user.",
                "operationId": "getInfo",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Information about the authenticated user.",
                        "schema": {
                            "$ref": "#/definitions/CurrentUserBean"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "currentuser"
                ],
                "summary": "Update Current User Information",
                "description": "This endpoint allows updating information about the authenticated user.",
                "operationId": "updateInfo",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateUserBean"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            }
        },
        "/currentuser/planorgs": {
            "get": {
                "tags": [
                    "currentuser"
                ],
                "summary": "Get Organizations (plan-edit)",
                "description": "This endpoint returns a list of all the organizations for which the current user has permission to edit plans.  For example, when creating a new Plan, the user interface must ask the user to choose within which Organization to create it.  This endpoint lists the valid choices for the current user.",
                "operationId": "getPlanOrganizations",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "A list of organizations.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrganizationSummaryBean"
                            }
                        }
                    }
                }
            }
        },
        "/currentuser/services": {
            "get": {
                "tags": [
                    "currentuser"
                ],
                "summary": "Get Current User's Services",
                "description": "Use this endpoint to list all of the Services the current user has permission to edit.  This includes all Services from all Organizations the user has service edit privileges for.",
                "operationId": "getServices",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "A list of Services.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ServiceSummaryBean"
                            }
                        }
                    }
                }
            }
        },
        "/currentuser/svcorgs": {
            "get": {
                "tags": [
                    "currentuser"
                ],
                "summary": "Get Organizations (svc-edit)",
                "description": "This endpoint returns a list of all the organizations for which the current user has permission to edit services.  For example, when creating a new Service, the user interface must ask the user to choose within which Organization to create it.  This endpoint lists the valid choices for the current user.",
                "operationId": "getServiceOrganizations",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "A list of organizations.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrganizationSummaryBean"
                            }
                        }
                    }
                }
            }
        },
        "/gateways": {
            "get": {
                "tags": [
                    "gateways"
                ],
                "summary": "List All Gateways",
                "description": "This endpoint returns a list of all the Gateways that have been configured.",
                "operationId": "list",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "A list of configured Gateways.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GatewaySummaryBean"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "gateways"
                ],
                "summary": "Create a Gateway",
                "description": "This endpoint is called to create a new Gateway.",
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NewGatewayBean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The newly created Gateway.",
                        "schema": {
                            "$ref": "#/definitions/GatewayBean"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "gateways"
                ],
                "summary": "Test a Gateway",
                "description": "This endpoint is used to test the Gateway's settings prior to either creating or updating it.  The information will be used to attempt to create a link between the API Manager and the Gateway, by simply trying to ping the Gateway's status endpoint.",
                "operationId": "test",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NewGatewayBean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The result of testing the Gateway settings.",
                        "schema": {
                            "$ref": "#/definitions/GatewayTestResultBean"
                        }
                    }
                }
            }
        },
        "/gateways/{gatewayId}": {
            "get": {
                "tags": [
                    "gateways"
                ],
                "summary": "Get a Gateway by ID",
                "description": "Call this endpoint to get the details of a single configured Gateway.",
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gatewayId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Gateway identified by {gatewayId}.",
                        "schema": {
                            "$ref": "#/definitions/GatewayBean"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "gateways"
                ],
                "summary": "Update a Gateway",
                "description": "Use this endpoint to update an existing Gateway.  Note that the name of the Gateway cannot be changed, as the name is tied closely with the Gateway's ID.  If you wish to rename the Gateway you must delete it and create a new one.",
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gatewayId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateGatewayBean"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            },
            "delete": {
                "tags": [
                    "gateways"
                ],
                "summary": "Delete a Gateway",
                "description": "This endpoint deletes a Gateway by its unique ID.",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "gatewayId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            }
        },
        "/kong": {
            "get": {
                "tags": [
                    "kong"
                ],
                "summary": "Get Kong information",
                "description": "Direct call to Kong for basic information",
                "operationId": "getInfo",
                "produces": [
                    "appilcation/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Kong information.",
                        "schema": {
                            "$ref": "#/definitions/KongInfo"
                        }
                    }
                }
            }
        },
        "/kong/api": {
            "post": {
                "tags": [
                    "kong"
                ],
                "summary": "Add a new API",
                "description": "Add a new API definition",
                "operationId": "addApi",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/KongApi"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Persisted API definition",
                        "schema": {
                            "$ref": "#/definitions/KongApi"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "kong"
                ],
                "summary": "Create or update API",
                "description": "Creates or updates an existing API",
                "operationId": "createOrUpdateApi",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/KongApi"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created or updated API",
                        "schema": {
                            "$ref": "#/definitions/KongApi"
                        }
                    }
                }
            }
        },
        "/kong/api/all": {
            "get": {
                "tags": [
                    "kong"
                ],
                "summary": "Lists all APIs",
                "description": "Lists all defined APIs for the Kong gateway",
                "operationId": "listApis",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of API defintions",
                        "schema": {
                            "$ref": "#/definitions/KongApiList"
                        }
                    }
                }
            }
        },
        "/kong/api/{id}": {
            "get": {
                "tags": [
                    "kong"
                ],
                "summary": "Get API",
                "description": "Get API based on the API id or name",
                "operationId": "getApi",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "API for the given id/name",
                        "schema": {
                            "$ref": "#/definitions/KongApi"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "kong"
                ],
                "summary": "Delete API",
                "description": "Delete API with given id/name",
                "operationId": "deleteApi",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            },
            "patch": {
                "tags": [
                    "kong"
                ],
                "summary": "Update API",
                "description": "Update API with given id/name",
                "operationId": "updateApi",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/KongApi"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated API definition",
                        "schema": {
                            "$ref": "#/definitions/KongApi"
                        }
                    }
                }
            }
        },
        "/kong/status": {
            "get": {
                "tags": [
                    "kong"
                ],
                "summary": "Get Kong status",
                "description": "Direct call to Kong for status information",
                "operationId": "getStatus",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Kong status.",
                        "schema": {
                            "$ref": "#/definitions/KongStatus"
                        }
                    }
                }
            }
        },
        "/organizations": {
            "post": {
                "tags": [
                    "organizations"
                ],
                "summary": "Create Organization",
                "description": "Use this endpoint to create a new Organization.",
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NewOrganizationBean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Full details about the Organization that was created.",
                        "schema": {
                            "$ref": "#/definitions/OrganizationBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Organization By ID",
                "description": "Use this endpoint to get information about a single Organization by its ID.",
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Organization.",
                        "schema": {
                            "$ref": "#/definitions/OrganizationBean"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "organizations"
                ],
                "summary": "Update Organization By ID",
                "description": "Updates meta-information about a single Organization.",
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateOrganizationBean"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            }
        },
        "/organizations/{organizationId}/activity": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Organization Activity",
                "description": "Returns audit activity information for a single Organization.  The audit information that is returned represents all of the activity associated with this Organization (i.e. an audit log for everything in the Organization).",
                "operationId": "activity",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of audit/activity entries.",
                        "schema": {
                            "$ref": "#/definitions/SearchResultsBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/applications": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "List Applications",
                "description": "Use this endpoint to get a list of all Applications in the Organization.",
                "operationId": "listApps",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Applications.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ApplicationSummaryBean"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "organizations"
                ],
                "summary": "Create Application",
                "description": "Use this endpoint to create a new Application.  Note that it is important to also create an initial version of the Application (e.g. 1.0).  This can either be done by including the 'initialVersion' property in the request, or by immediately following up with a call to \"Create Application Version\".  If the former is done, then a first Application version will be created automatically by this endpoint.",
                "operationId": "createApp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NewApplicationBean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Full details about the newly created Application.",
                        "schema": {
                            "$ref": "#/definitions/ApplicationBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/applications/{applicationId}": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Application By ID",
                "description": "Use this endpoint to retrieve information about a single Application by ID.  Note that this only returns information about the Application, not about any particular *version* of the Application.",
                "operationId": "getApp",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An Application.",
                        "schema": {
                            "$ref": "#/definitions/ApplicationBean"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "organizations"
                ],
                "summary": "Update Application",
                "description": "Use this endpoint to update information about an Application.",
                "operationId": "updateApp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateApplicationBean"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            }
        },
        "/organizations/{organizationId}/applications/{applicationId}/activity": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Application Activity",
                "description": "This endpoint returns audit activity information about the Application.",
                "operationId": "getAppActivity",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of audit activity entries.",
                        "schema": {
                            "$ref": "#/definitions/SearchResultsBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/applications/{applicationId}/versions": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "List Application Versions",
                "description": "Use this endpoint to list all of the versions of an Application.",
                "operationId": "listAppVersions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Applications versions.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ApplicationVersionSummaryBean"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "organizations"
                ],
                "summary": "Create Application Version",
                "description": "Use this endpoint to create a new version of the Application.",
                "operationId": "createAppVersion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NewApplicationVersionBean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Full details about the newly created Application version.",
                        "schema": {
                            "$ref": "#/definitions/ApplicationVersionBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/applications/{applicationId}/versions/{version}": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Application Version",
                "description": "Use this endpoint to get detailed information about a single version of an Application.",
                "operationId": "getAppVersion",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An Application version.",
                        "schema": {
                            "$ref": "#/definitions/ApplicationVersionBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/applications/{applicationId}/versions/{version}/activity": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Application Version Activity",
                "description": "Use this endpoint to get audit activity information for a single version of the Application.",
                "operationId": "getAppVersionActivity",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of audit entries.",
                        "schema": {
                            "$ref": "#/definitions/SearchResultsBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/applications/{applicationId}/versions/{version}/apiregistry/json": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get API Registry (JSON)",
                "description": "Use this endpoint to get registry style information about all Services that this Application consumes.  This is a useful endpoint to invoke in order to retrieve a summary of every Service consumed by the application.  The information returned by this endpoint could potentially be included directly in a client application as a way to lookup endpoint information for the APIs it wishes to consume.  This variant of the API Registry is formatted as JSON data.",
                "operationId": "getApiRegistryJSON",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "API Registry information.",
                        "schema": {
                            "$ref": "#/definitions/ApiRegistryBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/applications/{applicationId}/versions/{version}/apiregistry/xml": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get API Registry (XML)",
                "description": "Use this endpoint to get registry style information about all Services that this Application consumes.  This is a useful endpoint to invoke in order to retrieve a summary of every Service consumed by the application.  The information returned by this endpoint could potentially be included directly in a client application as a way to lookup endpoint information for the APIs it wishes to consume.  This variant of the API Registry is formatted as XML data.",
                "operationId": "getApiRegistryXML",
                "produces": [
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "API Registry information.",
                        "schema": {
                            "$ref": "#/definitions/ApiRegistryBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/applications/{applicationId}/versions/{version}/contracts": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "List All Contracts for an Application",
                "description": "Use this endpoint to get a list of all Contracts for an Application.",
                "operationId": "getApplicationVersionContracts",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Contracts.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContractSummaryBean"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get System Status",
                "description": "Use this endpoint to create a Contract between the Application and a Service.  In order to create a Contract, the caller must specify the Organization, ID, and Version of the Service.  Additionally the caller must specify the ID of the Plan it wished to use for the Contract with the Service.",
                "operationId": "createContract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NewContractBean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Full details about the newly created Contract.",
                        "schema": {
                            "$ref": "#/definitions/ContractBean"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "organizations"
                ],
                "summary": "Break All Contracts",
                "description": "Use this endpoint to break all contracts between this application and its services.",
                "operationId": "deleteAllContracts",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            }
        },
        "/organizations/{organizationId}/applications/{applicationId}/versions/{version}/contracts/{contractId}": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Service Contract",
                "description": "Use this endpoint to retrieve detailed information about a single Service Contract for an Application.",
                "operationId": "getContract",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "contractId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details about a single Contract.",
                        "schema": {
                            "$ref": "#/definitions/ContractBean"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "organizations"
                ],
                "summary": "Break Contract",
                "description": "Use this endpoint to break a Contract with a Service.",
                "operationId": "deleteContract",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "contractId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            }
        },
        "/organizations/{organizationId}/applications/{applicationId}/versions/{version}/metrics/serviceUsage": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get App Usage Metrics (per Service)",
                "description": "Retrieves metrics/analytics information for a specific application.  This will return request count data broken down by service.  It basically answers the question \"which services is my app really using?\".",
                "operationId": "getAppUsagePerService",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usage metrics information.",
                        "schema": {
                            "$ref": "#/definitions/AppUsagePerServiceBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/applications/{applicationId}/versions/{version}/policies": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "List All Application Policies",
                "description": "Use this endpoint to list all of the Policies configured for the Application.",
                "operationId": "listAppPolicies",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "System status information",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PolicySummaryBean"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "organizations"
                ],
                "summary": "Add Application Policy",
                "description": "Use this endpoint to add a new Policy to the Application version.",
                "operationId": "createAppPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NewPolicyBean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Full details about the newly added Policy.",
                        "schema": {
                            "$ref": "#/definitions/PolicyBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/applications/{applicationId}/versions/{version}/policies/{policyId}": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Application Policy",
                "description": "Use this endpoint to get information about a single Policy in the Application version.",
                "operationId": "getAppPolicy",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "policyId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Full information about the Policy.",
                        "schema": {
                            "$ref": "#/definitions/PolicyBean"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "organizations"
                ],
                "summary": "Update Application Policy",
                "description": "Use this endpoint to update the meta-data or configuration of a single Application Policy.",
                "operationId": "updateAppPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "policyId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdatePolicyBean"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            },
            "delete": {
                "tags": [
                    "organizations"
                ],
                "summary": "Remove Application Policy",
                "description": "Use this endpoint to remove a Policy from the Application.",
                "operationId": "deleteAppPolicy",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "policyId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            }
        },
        "/organizations/{organizationId}/applications/{applicationId}/versions/{version}/reorderPolicies": {
            "post": {
                "tags": [
                    "organizations"
                ],
                "summary": "Re-Order Application Policies",
                "description": "Use this endpoint to change the order of Policies for an Application.  When a Policy is added to the Application, it is added as the last Policy in the list of Application Policies.  Sometimes the order of Policies is important, so it is often useful to re-order the Policies by invoking this endpoint.  The body of the request should include all of the Policies for the Application, in the new desired order.  Note that only the IDs of each of the Policies is actually required in the request, at a minimum.",
                "operationId": "reorderApplicationPolicies",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PolicyChainBean"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            }
        },
        "/organizations/{organizationId}/members": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "List Organization Members",
                "description": "Lists all members of the organization.",
                "operationId": "listMembers",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of members.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MemberBean"
                            }
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/members/{userId}": {
            "delete": {
                "tags": [
                    "organizations"
                ],
                "summary": "Revoke All Memberships",
                "description": "Revoke all of a user's role memberships from the org.",
                "operationId": "revokeAll",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            }
        },
        "/organizations/{organizationId}/plans": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "List Plans",
                "description": "Use this endpoint to get a list of all Plans in the Organization.",
                "operationId": "listPlans",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Plans.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PlanSummaryBean"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "organizations"
                ],
                "summary": "Create Plan",
                "description": "Use this endpoint to create a new Plan.  Note that it is important to also create an initial version of the Plan (e.g. 1.0).  This can either be done by including the 'initialVersion' property in the request, or by immediately following up with a call to \"Create Plan Version\".  If the former is done, then a first Plan version will be created automatically by this endpoint.",
                "operationId": "createPlan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NewPlanBean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Full details about the newly created Plan.",
                        "schema": {
                            "$ref": "#/definitions/PlanBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/plans/{planId}": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Plan By ID",
                "description": "Use this endpoint to retrieve information about a single Plan by ID.  Note that this only returns information about the Plan, not about any particular *version* of the Plan.",
                "operationId": "getPlan",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "planId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Plan",
                        "schema": {
                            "$ref": "#/definitions/PlanBean"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "organizations"
                ],
                "summary": "Update Plan",
                "description": "Use this endpoint to update information about a Plan.",
                "operationId": "updatePlan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "planId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdatePlanBean"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            }
        },
        "/organizations/{organizationId}/plans/{planId}/activity": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Plan Activity",
                "description": "This endpoint returns audit activity information about the Plan.",
                "operationId": "getPlanActivity",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "planId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of audit activity entries.",
                        "schema": {
                            "$ref": "#/definitions/SearchResultsBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/plans/{planId}/versions": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "List Plan Versions",
                "description": "Use this endpoint to list all of the versions of a Plan.",
                "operationId": "listPlanVersions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "planId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Plans.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PlanVersionSummaryBean"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "organizations"
                ],
                "summary": "Create Plan Version",
                "description": "Use this endpoint to create a new version of the Plan.",
                "operationId": "createPlanVersion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "planId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NewPlanVersionBean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Full details about the newly created Plan version. When trying to get, update, or delete an plan that does not exist",
                        "schema": {
                            "$ref": "#/definitions/PlanVersionBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/plans/{planId}/versions/{version}": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Plan Version",
                "description": "Use this endpoint to get detailed information about a single version of",
                "operationId": "getPlanVersion",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "planId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An Plan version.",
                        "schema": {
                            "$ref": "#/definitions/PlanVersionBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/plans/{planId}/versions/{version}/activity": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Plan Version Activity",
                "description": "Use this endpoint to get audit activity information for a single version of the Plan.",
                "operationId": "getPlanVersionActivity",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "planId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of audit entries.",
                        "schema": {
                            "$ref": "#/definitions/SearchResultsBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/plans/{planId}/versions/{version}/policies": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "List All Plan Policies",
                "description": "Use this endpoint to list all of the Policies configured for the Plan.",
                "operationId": "listPlanPolicies",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "planId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A List of Policies.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PolicySummaryBean"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "organizations"
                ],
                "summary": "Add Plan Policy",
                "description": "Use this endpoint to add a new Policy to the Plan version.",
                "operationId": "createPlanPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "planId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NewPolicyBean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Full details about the newly added Policy.",
                        "schema": {
                            "$ref": "#/definitions/PolicyBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/plans/{planId}/versions/{version}/policies/{policyId}": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Plan Policy",
                "description": "Use this endpoint to get information about a single Policy in the Plan version.",
                "operationId": "getPlanPolicy",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "planId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "policyId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Full information about the Policy.",
                        "schema": {
                            "$ref": "#/definitions/PolicyBean"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "organizations"
                ],
                "summary": "Update Plan Policy",
                "description": "Use this endpoint to update the meta-data or configuration of a single Plan Policy.",
                "operationId": "updatePlanPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "planId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "policyId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdatePolicyBean"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            },
            "delete": {
                "tags": [
                    "organizations"
                ],
                "summary": "Remove Plan Policy",
                "description": "Use this endpoint to remove a Policy from the Plan.",
                "operationId": "deletePlanPolicy",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "planId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "policyId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            }
        },
        "/organizations/{organizationId}/plans/{planId}/versions/{version}/reorderPolicies": {
            "post": {
                "tags": [
                    "organizations"
                ],
                "summary": "Re-Order Plan Policies",
                "description": "Use this endpoint to change the order of Policies for a Plan.  When a Policy is added to the Plan, it is added as the last Policy in the list of Plan Policies.  Sometimes the order of Policies is important, so it is often useful to re-order the Policies by invoking this endpoint.  The body of the request should include all of the Policies for the Plan, in the new desired order.  Note that only the IDs of each of the Policies is actually required in the request, at a minimum.",
                "operationId": "reorderPlanPolicies",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "planId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PolicyChainBean"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            }
        },
        "/organizations/{organizationId}/roles": {
            "post": {
                "tags": [
                    "organizations"
                ],
                "summary": "Grant Membership(s)",
                "description": "Grant membership in a role to a user.",
                "operationId": "grant",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GrantRolesBean"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            }
        },
        "/organizations/{organizationId}/roles/{roleId}/{userId}": {
            "delete": {
                "tags": [
                    "organizations"
                ],
                "summary": "Revoke Single Membership",
                "description": "Revoke membership in a role.",
                "operationId": "revoke",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "roleId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            }
        },
        "/organizations/{organizationId}/services": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "List Services",
                "description": "Use this endpoint to get a list of all Services in the Organization.",
                "operationId": "listServices",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Services.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ServiceSummaryBean"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "organizations"
                ],
                "summary": "Create Service",
                "description": "Use this endpoint to create a new Service.  Note that it is important to also create an initial version of the Service (e.g. 1.0).  This can either be done by including the 'initialVersion' property in the request, or by immediately following up with a call to \"Create Service Version\".  If the former is done, then a first Service version will be created automatically by this endpoint.",
                "operationId": "createService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NewServiceBean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Full details about the newly created Service.",
                        "schema": {
                            "$ref": "#/definitions/ServiceBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/services/{serviceId}": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Service By ID",
                "description": "Use this endpoint to retrieve information about a single Service by ID.  Note that this only returns information about the Service, not about any particular *version* of the Service.",
                "operationId": "getService",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Service.",
                        "schema": {
                            "$ref": "#/definitions/ServiceBean"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "organizations"
                ],
                "summary": "Update Service",
                "description": "Use this endpoint to update information about a Service.",
                "operationId": "updateService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateServiceBean"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            }
        },
        "/organizations/{organizationId}/services/{serviceId}/activity": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Service Activity",
                "description": "This endpoint returns audit activity information about the Service.",
                "operationId": "getServiceActivity",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of audit activity entries.",
                        "schema": {
                            "$ref": "#/definitions/SearchResultsBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/services/{serviceId}/versions": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "List Service Versions",
                "description": "Use this endpoint to list all of the versions of a Service.",
                "operationId": "listServiceVersions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Services.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ServiceVersionSummaryBean"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "organizations"
                ],
                "summary": "Create Service Version",
                "description": "Use this endpoint to create a new version of the Service.",
                "operationId": "createServiceVersion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NewServiceVersionBean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Full details about the newly created Service version.",
                        "schema": {
                            "$ref": "#/definitions/ServiceVersionBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/services/{serviceId}/versions/{version}": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Service Version",
                "description": "Use this endpoint to get detailed information about a single version of a Service.",
                "operationId": "getServiceVersion",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Service version.",
                        "schema": {
                            "$ref": "#/definitions/ServiceVersionBean"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "organizations"
                ],
                "summary": "Update Service Version",
                "description": "Use this endpoint to update information about a single version of a Service.",
                "operationId": "updateServiceVersion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateServiceVersionBean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The updated Service Version.",
                        "schema": {
                            "$ref": "#/definitions/ServiceVersionBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/services/{serviceId}/versions/{version}/activity": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Service Version Activity",
                "description": "Use this endpoint to get audit activity information for a single version of the Service.",
                "operationId": "getServiceVersionActivity",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of audit entries.",
                        "schema": {
                            "$ref": "#/definitions/SearchResultsBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/services/{serviceId}/versions/{version}/contracts": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "List Service Contracts",
                "description": "Use this endpoint to get a list of all Contracts created with this Service.  This will return Contracts created by between any Application and through any Plan.",
                "operationId": "getServiceVersionContracts",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Contracts.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContractSummaryBean"
                            }
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/services/{serviceId}/versions/{version}/definition": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Service Definition",
                "description": "Use this endpoint to retrieve the Service's definition document.  A service definition document can be several different types, depending on the Service type and technology used to define the service.  For example, this endpoint might return a WSDL document, or a Swagger JSON document.",
                "operationId": "getServiceDefinition",
                "produces": [
                    "application/json",
                    "application/wsdl+xml",
                    "application/x-yaml"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Service Definition document (e.g. a Swagger JSON file).",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "organizations"
                ],
                "summary": "Update Service Definition",
                "description": "Use this endpoint to update the Service's definition document.  A service definition will vary depending on the type of service, and the type of definition used.  For example, it might be a Swagger document or a WSDL file. To use this endpoint, simply PUT the updated Service Definition document in its entirety, making sure to set the Content-Type appropriately for the type of definition document.  The content will be stored and the Service's 'Definition Type' field will be updated.",
                "operationId": "updateServiceDefinition",
                "consumes": [
                    "application/json",
                    "application/wsdl+xml",
                    "application/x-yaml"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            },
            "delete": {
                "tags": [
                    "organizations"
                ],
                "summary": "Remove Service Definition",
                "description": "Use this endpoint to delete a Service's definition document.  When this is done, the 'definitionType' field on the Service will be set to None.",
                "operationId": "deleteServiceDefinition",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            }
        },
        "/organizations/{organizationId}/services/{serviceId}/versions/{version}/endpoint": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Service Endpoint",
                "description": "Use this endpoint to get information about the Managed Service's gateway endpoint.  In other words, this returns the actual live endpoint on the API Gateway - the endpoint that a client should use when invoking the Service.",
                "operationId": "getServiceVersionEndpointInfo",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The live Service endpoint information.",
                        "schema": {
                            "$ref": "#/definitions/ServiceVersionEndpointSummaryBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/services/{serviceId}/versions/{version}/metrics/appResponseStats": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Service Response Statistics (per App)",
                "description": "Retrieves metrics/analytics information for a specific service.  This will return response type statistics broken down by application.",
                "operationId": "getResponseStatsPerApp",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usage metrics information.",
                        "schema": {
                            "$ref": "#/definitions/ResponseStatsPerAppBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/services/{serviceId}/versions/{version}/metrics/appUsage": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Service Usage Metrics (per App)",
                "description": "Retrieves metrics/analytics information for a specific service.  This will return request count data broken down by application.  It basically answers the question \"who is calling my service?\".",
                "operationId": "getUsagePerApp",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usage metrics information.",
                        "schema": {
                            "$ref": "#/definitions/UsagePerAppBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/services/{serviceId}/versions/{version}/metrics/planResponseStats": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Service Response Statistics (per Plan)",
                "description": "Retrieves metrics/analytics information for a specific service.  This will return response type statistics broken down by plan.",
                "operationId": "getResponseStatsPerPlan",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usage metrics information.",
                        "schema": {
                            "$ref": "#/definitions/SystemStatusBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/services/{serviceId}/versions/{version}/metrics/planUsage": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Service Usage Metrics (per Plan)",
                "description": "Retrieves metrics/analytics information for a specific service.  This will return request count data broken down by plan.  It basically answers the question which service plans are most used?.",
                "operationId": "getUsagePerPlan",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usage metrics information.",
                        "schema": {
                            "$ref": "#/definitions/UsagePerPlanBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/services/{serviceId}/versions/{version}/metrics/responseStats": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get System Status",
                "description": "This endpoint simply returns the status of the apiman system. This is a useful endpoint to use when testing a client's connection to the apiman API Manager REST services.",
                "operationId": "getResponseStats",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "interval",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "month",
                            "week",
                            "day",
                            "hour",
                            "minute"
                        ]
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "System status information",
                        "schema": {
                            "$ref": "#/definitions/SystemStatusBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/services/{serviceId}/versions/{version}/metrics/summaryResponseStats": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Service Response Statistics (Summary)",
                "description": "Retrieves metrics/analytics information for a specific service.  This will return total response type statistics over the given date range.  Basically this will return three numbers: total request, # failed responses, # error responses.",
                "operationId": "getResponseStatsSummary",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "System status information",
                        "schema": {
                            "$ref": "#/definitions/ResponseStatsSummaryBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/services/{serviceId}/versions/{version}/metrics/usage": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Service Usage Metrics",
                "description": "Retrieves metrics/analytics information for a specific service.  This will return a full histogram of request count data based on the provided date range and interval.  Valid intervals are:  month, week, day, hour, minute",
                "operationId": "getUsage",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "interval",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "month",
                            "week",
                            "day",
                            "hour",
                            "minute"
                        ]
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usage metrics information.",
                        "schema": {
                            "$ref": "#/definitions/UsageHistogramBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/services/{serviceId}/versions/{version}/plans": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "List Service Plans",
                "description": "Use this endpoint to list the Plans configured for the given Service version.",
                "operationId": "getServiceVersionPlans",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Service plans.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ServicePlanSummaryBean"
                            }
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/services/{serviceId}/versions/{version}/plans/{planId}/policyChain": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Service Policy Chain",
                "description": "Use this endpoint to get a Policy Chain for the specific Service version.  A Policy Chain is a useful summary to better understand which Policies would be executed for a request to this Service through a particular Plan offered by the Service.  Often this information is interesting prior to create a Contract with the Service.",
                "operationId": "getServicePolicyChain",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "planId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Policy Chain.",
                        "schema": {
                            "$ref": "#/definitions/PolicyChainBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/services/{serviceId}/versions/{version}/policies": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "List All Service Policies",
                "description": "Use this endpoint to list all of the Policies configured for the Service.",
                "operationId": "listServicePolicies",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A List of Policies.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PolicySummaryBean"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "organizations"
                ],
                "summary": "Add Service Policy",
                "description": "Use this endpoint to add a new Policy to the Service version.",
                "operationId": "createServicePolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NewPolicyBean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Full details about the newly added Policy.",
                        "schema": {
                            "$ref": "#/definitions/PolicyBean"
                        }
                    }
                }
            }
        },
        "/organizations/{organizationId}/services/{serviceId}/versions/{version}/policies/{policyId}": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Get Service Policy",
                "description": "Use this endpoint to get information about a single Policy in the Service version.",
                "operationId": "getServicePolicy",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "policyId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Full information about the Policy.",
                        "schema": {
                            "$ref": "#/definitions/PolicyBean"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "organizations"
                ],
                "summary": "Update Service Policy",
                "description": "Use this endpoint to update the meta-data or configuration of a single Service Policy.",
                "operationId": "updateServicePolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "policyId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdatePolicyBean"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            },
            "delete": {
                "tags": [
                    "organizations"
                ],
                "summary": "Remove Service Policy",
                "description": "Use this endpoint to remove a Policy from the Service.",
                "operationId": "deleteServicePolicy",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "policyId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            }
        },
        "/organizations/{organizationId}/services/{serviceId}/versions/{version}/reorderPolicies": {
            "post": {
                "tags": [
                    "organizations"
                ],
                "summary": "Re-Order Service Policies",
                "description": "Use this endpoint to change the order of Policies for a Service.  When a Policy is added to the Service, it is added as the last Policy in the list of Service Policies.  Sometimes the order of Policies is important, so it is often useful to re-order the Policies by invoking this endpoint.  The body of the request should include all of the Policies for the Service, in the new desired order.  Note that only the IDs of each of the Policies is actually required in the request, at a minimum.",
                "operationId": "reorderServicePolicies",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PolicyChainBean"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            }
        },
        "/permissions": {
            "get": {
                "tags": [
                    "permissions"
                ],
                "summary": "Get Current User's Permissions",
                "description": "This endpoint returns all of the permissions assigned to the currently authenticated user.",
                "operationId": "getPermissionsForCurrentUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "All of the user's permissions.",
                        "schema": {
                            "$ref": "#/definitions/UserPermissionsBean"
                        }
                    }
                }
            }
        },
        "/permissions/{userId}": {
            "get": {
                "tags": [
                    "permissions"
                ],
                "summary": "Get User's Permissions",
                "description": "This endpoint returns all of the permissions assigned to a specific user.",
                "operationId": "getPermissionsForUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All of the user's permissions.",
                        "schema": {
                            "$ref": "#/definitions/UserPermissionsBean"
                        }
                    }
                }
            }
        },
        "/plugins": {
            "get": {
                "tags": [
                    "plugins"
                ],
                "summary": "List All Plugins",
                "description": "This endpoint returns a list of all plugins that have been added to the",
                "operationId": "list",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "A list of plugins.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PluginSummaryBean"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "plugins"
                ],
                "summary": "Add a Plugin",
                "description": "Use this endpoint to add a plugin to apiman.  A plugin consists of the maven coordinates of an artifact deployed to a remote maven repository (e.g. maven central).",
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NewPluginBean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Full details about the plugin that was added.",
                        "schema": {
                            "$ref": "#/definitions/PluginBean"
                        }
                    }
                }
            }
        },
        "/plugins/{pluginId}": {
            "get": {
                "tags": [
                    "plugins"
                ],
                "summary": "Get Plugin by ID",
                "description": "This endpoint can be used to access the full information about an apiman plugin.  The plugin is retrieved using the ID it was given when it was added.  The ID information can be retrieved by listing all plugins or remembered when a plugin is first added.",
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pluginId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An api-engine plugin.",
                        "schema": {
                            "$ref": "#/definitions/PluginBean"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "plugins"
                ],
                "summary": "Delete a Plugin by ID",
                "description": "Call this endpoint to delete a plugin.",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "pluginId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            }
        },
        "/plugins/{pluginId}/policyDefs": {
            "get": {
                "tags": [
                    "plugins"
                ],
                "summary": "Get Plugin Policy Definitions",
                "description": "Use this endpoint to get a list of all policy definitions contributed by the plugin.",
                "operationId": "getPolicyDefs",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pluginId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of policy definitions.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PolicyDefinitionSummaryBean"
                            }
                        }
                    }
                }
            }
        },
        "/plugins/{pluginId}/policyDefs/{policyDefId}/form": {
            "get": {
                "tags": [
                    "plugins"
                ],
                "summary": "Get Plugin Policy Form",
                "description": "Use this endpoint to retrieve the form associated with a particular policy definition.  Plugins may contribute policy definitions to apiman.  Part of that contribution *may* include a form for the UI to display when configuring an instance of the policy.  This endpoint returns this form.",
                "operationId": "getPolicyForm",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pluginId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "policyDefId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A policy configuration form.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/policyDefs": {
            "get": {
                "tags": [
                    "policyDefs"
                ],
                "summary": "List Policy Definitions",
                "description": "This endpoint returns a list of all policy definitions that have been added.",
                "operationId": "list",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "A list of policy definitions.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PolicyDefinitionSummaryBean"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "policyDefs"
                ],
                "summary": "Add Policy Definition",
                "description": "Use this endpoint to add a policy definition.  The policy definition can optionall include the 'id' property.  If no 'id' is supplied, one will be generated based on the name.",
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PolicyDefinitionBean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details about the policy definition that was added.",
                        "schema": {
                            "$ref": "#/definitions/PolicyDefinitionBean"
                        }
                    }
                }
            }
        },
        "/policyDefs/{policyDefinitionId}": {
            "get": {
                "tags": [
                    "policyDefs"
                ],
                "summary": "Get Policy Definition by ID",
                "description": "Use this endpoint to get a single policy definition by its ID.",
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "policyDefinitionId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A policy definition if found.",
                        "schema": {
                            "$ref": "#/definitions/PolicyDefinitionBean"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "policyDefs"
                ],
                "summary": "Update Policy Definition",
                "description": "Update the meta information about a policy definition.",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "policyDefinitionId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdatePolicyDefinitionBean"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            },
            "delete": {
                "tags": [
                    "policyDefs"
                ],
                "summary": "Delete policy definition.",
                "description": "Use this endpoint to delete a policy definition by its ID.  If the policy definition was added automatically from an installed plugin, this will fail.  The only way to remove such policy definitions is to remove the plugin.",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "policyDefinitionId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "tags": [
                    "roles"
                ],
                "summary": "List all Roles",
                "description": "This endpoint lists all of the roles currently defined in apiman.",
                "operationId": "list",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "A list of roles.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SearchCriteriaBean"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "roles"
                ],
                "summary": "Create Role",
                "description": "Use this endpoint to create a new role.  A role consists of a set of permissions granted to a user when that user is given the role within the context of an organization.",
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NewRoleBean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The new created role.",
                        "schema": {
                            "$ref": "#/definitions/RoleBean"
                        }
                    }
                }
            }
        },
        "/roles/search": {
            "post": {
                "tags": [
                    "roles"
                ],
                "summary": "Search for Roles",
                "description": "This endpoint provides a way to search for roles. The search criteria is provided in the body of the request, including filters, order-by, and paging information.",
                "operationId": "search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SearchCriteriaBean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of roles.",
                        "schema": {
                            "$ref": "#/definitions/SearchResultsBean"
                        }
                    }
                }
            }
        },
        "/roles/{roleId}": {
            "get": {
                "tags": [
                    "roles"
                ],
                "summary": "Get a Role by ID.",
                "description": "Use this endpoint to retrieve information about a single Role by its ID.",
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "roleId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A role.",
                        "schema": {
                            "$ref": "#/definitions/RoleBean"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "roles"
                ],
                "summary": "Update a Role by ID",
                "description": "Use this endpoint to update the information about an existing role.  The role is identified by its ID.",
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "roleId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateRoleBean"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            },
            "delete": {
                "tags": [
                    "roles"
                ],
                "summary": "Delete a Role by ID",
                "description": "Use this endpoint to delete a role by its ID.",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "roleId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            }
        },
        "/search/applications": {
            "post": {
                "tags": [
                    "search"
                ],
                "summary": "Search for Organizations",
                "description": "Use this endpoint to search for applications.  The search criteria is provided in the body of the request, including filters, order-by, and paging information.",
                "operationId": "searchApps",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SearchCriteriaBean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The search results (a page of applications).",
                        "schema": {
                            "$ref": "#/definitions/SearchResultsBean"
                        }
                    }
                }
            }
        },
        "/search/organizations": {
            "post": {
                "tags": [
                    "search"
                ],
                "summary": "Search for Organizations",
                "description": "Use this endpoint to search for organizations.  The search criteria is provided in the body of the request, including filters, order-by, and paging information.",
                "operationId": "searchOrgs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SearchCriteriaBean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The search results (a page of organizations)",
                        "schema": {
                            "$ref": "#/definitions/SearchResultsBean"
                        }
                    }
                }
            }
        },
        "/search/services": {
            "post": {
                "tags": [
                    "search"
                ],
                "summary": "Search for Services",
                "description": "Use this endpoint to search for services.  The search criteria is provided in the body of the request, including filters, order-by, and paging information.",
                "operationId": "searchServices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SearchCriteriaBean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The search results (a page of services).",
                        "schema": {
                            "$ref": "#/definitions/SearchResultsBean"
                        }
                    }
                }
            }
        },
        "/system/status": {
            "get": {
                "tags": [
                    "system"
                ],
                "summary": "Get System Status",
                "description": "This endpoint simply returns the status of the apiman system. This is a useful endpoint to use when testing a client's connection to the apiman API Manager REST services.",
                "operationId": "getStatus",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "System status information",
                        "schema": {
                            "$ref": "#/definitions/SystemStatusBean"
                        }
                    }
                }
            }
        },
        "/users/search": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Search for Users",
                "description": "Use this endpoint to search for users.  The search criteria is provided in the body of the request, including filters, order-by, and paging information.",
                "operationId": "search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SearchCriteriaBean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The search results (a page of organizations).",
                        "schema": {
                            "$ref": "#/definitions/SearchResultsBean"
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get User by ID",
                "description": "Use this endpoint to get information about a specific user by the User ID.",
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Full user information.",
                        "schema": {
                            "$ref": "#/definitions/UserBean"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "users"
                ],
                "summary": "Update a User by ID",
                "description": "Use this endpoint to update the information about a user.  This will fail unless the authenticated user is an admin or identical to the user being updated.",
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateUserBean"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful, no content"
                    }
                }
            }
        },
        "/users/{userId}/activity": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get User Activity",
                "description": "Use this endpoint to get information about the user's audit history.  This returns audit entries corresponding to each of the actions taken by the user.  For example, when a user creates a new Organization, an audit entry is recorded and would be included in the result of this endpoint.",
                "operationId": "getActivity",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of audit entries.",
                        "schema": {
                            "$ref": "#/definitions/SearchResultsBean"
                        }
                    }
                }
            }
        },
        "/users/{userId}/applications": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "List User Applications",
                "description": "This endpoint returns all applications that the user has permission to edit.",
                "operationId": "getApplications",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of applications.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ApplicationSummaryBean"
                            }
                        }
                    }
                }
            }
        },
        "/users/{userId}/organizations": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "List User Organizations",
                "description": "This endpoint returns the list of organizations that the user is a member of.  The user is a member of an organization if she has at least one role for the org.",
                "operationId": "getOrganizations",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of organizations.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrganizationSummaryBean"
                            }
                        }
                    }
                }
            }
        },
        "/users/{userId}/services": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "List User Services",
                "description": "This endpoint returns all services that the user has permission to edit.",
                "operationId": "getServices",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of services.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ServiceSummaryBean"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "PolicySummaryBean": {
            "type": "object",
            "properties": {
                "policyDefinitionId": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "NewOrganizationBean": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "ResponseStatsDataPoint": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "failures": {
                    "type": "integer",
                    "format": "int64"
                },
                "errors": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "PlanSummaryBean": {
            "type": "object",
            "properties": {
                "organizationId": {
                    "type": "string"
                },
                "organizationName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "ApplicationSummaryBean": {
            "type": "object",
            "properties": {
                "organizationId": {
                    "type": "string"
                },
                "organizationName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "numContracts": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "SearchResultsBeanAuditEntryBean": {
            "type": "object",
            "properties": {
                "beans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AuditEntryBean"
                    }
                },
                "totalSize": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ActionBean": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "publishService",
                        "retireService",
                        "registerApplication",
                        "unregisterApplication",
                        "lockPlan"
                    ]
                },
                "organizationId": {
                    "type": "string"
                },
                "entityId": {
                    "type": "string"
                },
                "entityVersion": {
                    "type": "string"
                }
            }
        },
        "ApplicationVersionBean": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "application": {
                    "$ref": "#/definitions/ApplicationBean"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Created",
                        "Ready",
                        "Registered",
                        "Retired"
                    ]
                },
                "version": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "modifiedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "publishedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "retiredOn": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "PlanVersionBean": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "plan": {
                    "$ref": "#/definitions/PlanBean"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Created",
                        "Ready",
                        "Locked"
                    ]
                },
                "version": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "modifiedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "lockedOn": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ResponseStatsPerPlanBean": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ResponseStatsDataPoint"
                    }
                }
            }
        },
        "PagingBean": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "IStorageQuery": {
            "type": "object"
        },
        "SearchResultsBean": {
            "type": "object",
            "properties": {
                "beans": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "totalSize": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "UsagePerAppBean": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "MediaType": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "subtype": {
                    "type": "string"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "wildcardType": {
                    "type": "boolean",
                    "default": false
                },
                "wildcardSubtype": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "OrganizationBean": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "modifiedOn": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "AppUsagePerServiceBean": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "PluginBean": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "groupId": {
                    "type": "string"
                },
                "artifactId": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "classifier": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "UpdateUserBean": {
            "type": "object",
            "properties": {
                "fullName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "NewPluginBean": {
            "type": "object",
            "properties": {
                "groupId": {
                    "type": "string"
                },
                "artifactId": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "classifier": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "NewServiceBean": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "initialVersion": {
                    "type": "string"
                }
            }
        },
        "ContractBean": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "application": {
                    "$ref": "#/definitions/ApplicationVersionBean"
                },
                "service": {
                    "$ref": "#/definitions/ServiceVersionBean"
                },
                "plan": {
                    "$ref": "#/definitions/PlanVersionBean"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "apikey": {
                    "type": "string"
                }
            }
        },
        "PolicyDefinitionBean": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "policyImpl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "templates": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/PolicyDefinitionTemplateBean"
                    }
                },
                "pluginId": {
                    "type": "integer",
                    "format": "int64"
                },
                "formType": {
                    "type": "string",
                    "enum": [
                        "Default",
                        "JsonSchema"
                    ]
                },
                "form": {
                    "type": "string"
                }
            }
        },
        "ApplicationBean": {
            "type": "object",
            "properties": {
                "organization": {
                    "$ref": "#/definitions/OrganizationBean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "NewGatewayBean": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "REST"
                    ]
                },
                "configuration": {
                    "type": "string"
                }
            }
        },
        "PolicyDefinitionSummaryBean": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "policyImpl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "formType": {
                    "type": "string",
                    "enum": [
                        "Default",
                        "JsonSchema"
                    ]
                },
                "pluginId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "IIdmStorage": {
            "type": "object"
        },
        "Link": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "params": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "rels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "uriBuilder": {
                    "$ref": "#/definitions/UriBuilder"
                },
                "rel": {
                    "type": "string"
                }
            }
        },
        "AuditEntryBean": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "who": {
                    "type": "string"
                },
                "organizationId": {
                    "type": "string"
                },
                "entityType": {
                    "type": "string",
                    "enum": [
                        "Organization",
                        "Application",
                        "Plan",
                        "Service"
                    ]
                },
                "entityId": {
                    "type": "string"
                },
                "entityVersion": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "what": {
                    "type": "string",
                    "enum": [
                        "Create",
                        "Update",
                        "Delete",
                        "Clone",
                        "Grant",
                        "Revoke",
                        "Publish",
                        "Retire",
                        "Register",
                        "Unregister",
                        "AddPolicy",
                        "RemovePolicy",
                        "UpdatePolicy",
                        "ReorderPolicies",
                        "CreateContract",
                        "BreakContract",
                        "Lock",
                        "UpdateDefinition",
                        "DeleteDefinition"
                    ]
                },
                "data": {
                    "type": "string"
                }
            }
        },
        "GrantRolesBean": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "string"
                },
                "roleIds": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "UsageDataPoint": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "count": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ServiceVersionBean": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "service": {
                    "$ref": "#/definitions/ServiceBean"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Created",
                        "Ready",
                        "Published",
                        "Retired"
                    ]
                },
                "endpoint": {
                    "type": "string"
                },
                "endpointType": {
                    "type": "string",
                    "enum": [
                        "rest",
                        "soap"
                    ]
                },
                "endpointProperties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "gateways": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/ServiceGatewayBean"
                    }
                },
                "publicService": {
                    "type": "boolean",
                    "default": false
                },
                "plans": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/ServicePlanBean"
                    }
                },
                "version": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "modifiedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "publishedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "retiredOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "definitionType": {
                    "type": "string",
                    "enum": [
                        "None",
                        "SwaggerJSON",
                        "SwaggerYAML",
                        "WSDL"
                    ]
                }
            }
        },
        "KongStatus": {
            "type": "object",
            "properties": {
                "totalRequests": {
                    "type": "integer",
                    "format": "int32"
                },
                "connectionsActive": {
                    "type": "integer",
                    "format": "int32"
                },
                "connectionsAccepted": {
                    "type": "integer",
                    "format": "int32"
                },
                "connectionsHandled": {
                    "type": "integer",
                    "format": "int32"
                },
                "connectionsReading": {
                    "type": "integer",
                    "format": "int32"
                },
                "connectionsWriting": {
                    "type": "integer",
                    "format": "int32"
                },
                "connectionsWaiting": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "MemberBean": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "joinedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MemberRoleBean"
                    }
                }
            }
        },
        "SearchCriteriaBean": {
            "type": "object",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SearchCriteriaFilterBean"
                    }
                },
                "orderBy": {
                    "$ref": "#/definitions/OrderByBean"
                },
                "paging": {
                    "$ref": "#/definitions/PagingBean"
                }
            }
        },
        "Plugins": {
            "type": "object",
            "properties": {
                "availableOnServer": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "NewCookie": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "path": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "maxAge": {
                    "type": "integer",
                    "format": "int32"
                },
                "expiry": {
                    "type": "string",
                    "format": "date-time"
                },
                "secure": {
                    "type": "boolean",
                    "default": false
                },
                "httpOnly": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "PluginSummaryBean": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "groupId": {
                    "type": "string"
                },
                "artifactId": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "classifier": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "IRoleResource": {
            "type": "object"
        },
        "NewApplicationVersionBean": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "string"
                },
                "clone": {
                    "type": "boolean",
                    "default": false
                },
                "cloneVersion": {
                    "type": "string"
                }
            }
        },
        "ResponseStatsHistogramBean": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ResponseStatsDataPoint"
                    }
                }
            }
        },
        "ServicePlanBean": {
            "type": "object",
            "properties": {
                "planId": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "CurrentUserBean": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "joinedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "admin": {
                    "type": "boolean",
                    "default": false
                },
                "permissions": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/PermissionBean"
                    }
                }
            }
        },
        "PlanVersionSummaryBean": {
            "type": "object",
            "properties": {
                "organizationId": {
                    "type": "string"
                },
                "organizationName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Created",
                        "Ready",
                        "Locked"
                    ]
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "NewServiceVersionBean": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "string"
                },
                "clone": {
                    "type": "boolean",
                    "default": false
                },
                "cloneVersion": {
                    "type": "string"
                }
            }
        },
        "ApplicationVersionSummaryBean": {
            "type": "object",
            "properties": {
                "organizationId": {
                    "type": "string"
                },
                "organizationName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Created",
                        "Ready",
                        "Registered",
                        "Retired"
                    ]
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "ApiEntryBean": {
            "type": "object",
            "properties": {
                "serviceOrgId": {
                    "type": "string"
                },
                "serviceOrgName": {
                    "type": "string"
                },
                "serviceId": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "serviceVersion": {
                    "type": "string"
                },
                "planId": {
                    "type": "string"
                },
                "planName": {
                    "type": "string"
                },
                "planVersion": {
                    "type": "string"
                },
                "httpEndpoint": {
                    "type": "string"
                },
                "apiKey": {
                    "type": "string"
                },
                "gatewayId": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "api"
            }
        },
        "UpdateRoleBean": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "autoGrant": {
                    "type": "boolean",
                    "default": false
                },
                "permissions": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string",
                        "enum": [
                            "orgView",
                            "orgEdit",
                            "orgAdmin",
                            "svcView",
                            "svcEdit",
                            "svcAdmin",
                            "appView",
                            "appEdit",
                            "appAdmin",
                            "planView",
                            "planEdit",
                            "planAdmin"
                        ]
                    }
                }
            }
        },
        "IApiKeyGenerator": {
            "type": "object"
        },
        "SystemStatusBean": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "moreInfo": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "builtOn": {
                    "type": "string"
                },
                "up": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "SearchResultsBeanApplicationSummaryBean": {
            "type": "object",
            "properties": {
                "beans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApplicationSummaryBean"
                    }
                },
                "totalSize": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "UpdateOrganizationBean": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                }
            }
        },
        "IApplicationValidator": {
            "type": "object"
        },
        "UpdateServiceBean": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                }
            }
        },
        "Locale": {
            "type": "object",
            "properties": {
                "language": {
                    "type": "string"
                },
                "script": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "variant": {
                    "type": "string"
                },
                "extensionKeys": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "unicodeLocaleAttributes": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "unicodeLocaleKeys": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "iso3Language": {
                    "type": "string"
                },
                "iso3Country": {
                    "type": "string"
                },
                "displayLanguage": {
                    "type": "string"
                },
                "displayScript": {
                    "type": "string"
                },
                "displayCountry": {
                    "type": "string"
                },
                "displayVariant": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                }
            }
        },
        "IGatewayLinkFactory": {
            "type": "object"
        },
        "UsagePerPlanBean": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "KongApiList": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer",
                    "format": "int32"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Datum"
                    }
                },
                "next": {
                    "type": "string"
                }
            }
        },
        "NewRoleBean": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "autoGrant": {
                    "type": "boolean",
                    "default": false
                },
                "permissions": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string",
                        "enum": [
                            "orgView",
                            "orgEdit",
                            "orgAdmin",
                            "svcView",
                            "svcEdit",
                            "svcAdmin",
                            "appView",
                            "appEdit",
                            "appAdmin",
                            "planView",
                            "planEdit",
                            "planAdmin"
                        ]
                    }
                }
            }
        },
        "KongApi": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "publicDns": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "stripPath": {
                    "type": "boolean",
                    "default": false
                },
                "targetUrl": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "ServiceVersionSummaryBean": {
            "type": "object",
            "properties": {
                "organizationId": {
                    "type": "string"
                },
                "organizationName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Created",
                        "Ready",
                        "Published",
                        "Retired"
                    ]
                },
                "version": {
                    "type": "string"
                },
                "publicService": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "RoleBean": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "autoGrant": {
                    "type": "boolean",
                    "default": false
                },
                "permissions": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string",
                        "enum": [
                            "orgView",
                            "orgEdit",
                            "orgAdmin",
                            "svcView",
                            "svcEdit",
                            "svcAdmin",
                            "appView",
                            "appEdit",
                            "appAdmin",
                            "planView",
                            "planEdit",
                            "planAdmin"
                        ]
                    }
                }
            }
        },
        "IServiceValidator": {
            "type": "object"
        },
        "PolicyDefinitionTemplateBean": {
            "type": "object",
            "properties": {
                "language": {
                    "type": "string"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "ServiceBean": {
            "type": "object",
            "properties": {
                "organization": {
                    "$ref": "#/definitions/OrganizationBean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ServiceVersionEndpointSummaryBean": {
            "type": "object",
            "properties": {
                "managedEndpoint": {
                    "type": "string"
                }
            }
        },
        "GatewayBean": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "modifiedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "REST"
                    ]
                },
                "configuration": {
                    "type": "string"
                }
            }
        },
        "UriBuilder": {
            "type": "object"
        },
        "ApiRegistryBean": {
            "type": "object",
            "properties": {
                "apis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiEntryBean"
                    }
                }
            },
            "xml": {
                "name": "apiRegistry"
            }
        },
        "Datum": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "publicDns": {
                    "type": "string"
                },
                "targetUrl": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "number",
                    "format": "double"
                },
                "stripPath": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "SearchResultsBeanUserBean": {
            "type": "object",
            "properties": {
                "beans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserBean"
                    }
                },
                "totalSize": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ISecurityContext": {
            "type": "object",
            "properties": {
                "fullName": {
                    "type": "string"
                },
                "admin": {
                    "type": "boolean",
                    "default": false
                },
                "email": {
                    "type": "string"
                },
                "currentUser": {
                    "type": "string"
                }
            }
        },
        "PlanBean": {
            "type": "object",
            "properties": {
                "organization": {
                    "$ref": "#/definitions/OrganizationBean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ServiceGatewayBean": {
            "type": "object",
            "properties": {
                "gatewayId": {
                    "type": "string"
                }
            }
        },
        "UpdateGatewayBean": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "REST"
                    ]
                },
                "configuration": {
                    "type": "string"
                }
            }
        },
        "NewPlanBean": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "initialVersion": {
                    "type": "string"
                }
            }
        },
        "UpdatePolicyDefinitionBean": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                }
            }
        },
        "NewPolicyBean": {
            "type": "object",
            "properties": {
                "definitionId": {
                    "type": "string"
                },
                "configuration": {
                    "type": "string"
                }
            }
        },
        "PermissionBean": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "enum": [
                        "orgView",
                        "orgEdit",
                        "orgAdmin",
                        "svcView",
                        "svcEdit",
                        "svcAdmin",
                        "appView",
                        "appEdit",
                        "appAdmin",
                        "planView",
                        "planEdit",
                        "planAdmin"
                    ]
                },
                "organizationId": {
                    "type": "string"
                }
            }
        },
        "OrderByBean": {
            "type": "object",
            "properties": {
                "ascending": {
                    "type": "boolean",
                    "default": false
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "SearchCriteriaFilterBean": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "operator": {
                    "type": "string",
                    "enum": [
                        "bool_eq",
                        "eq",
                        "neq",
                        "gt",
                        "gte",
                        "lt",
                        "lte",
                        "like"
                    ]
                }
            }
        },
        "KongInfo": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "string"
                },
                "luaVersion": {
                    "type": "string"
                },
                "tagline": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "plugins": {
                    "$ref": "#/definitions/Plugins"
                }
            }
        },
        "UsageHistogramBean": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UsageDataPoint"
                    }
                }
            }
        },
        "ServiceSummaryBean": {
            "type": "object",
            "properties": {
                "organizationId": {
                    "type": "string"
                },
                "organizationName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "NewPlanVersionBean": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "string"
                },
                "clone": {
                    "type": "boolean",
                    "default": false
                },
                "cloneVersion": {
                    "type": "string"
                }
            }
        },
        "GatewaySummaryBean": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "REST"
                    ]
                }
            }
        },
        "IMetricsAccessor": {
            "type": "object"
        },
        "SearchResultsBeanOrganizationSummaryBean": {
            "type": "object",
            "properties": {
                "beans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrganizationSummaryBean"
                    }
                },
                "totalSize": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "UpdateApplicationBean": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                }
            }
        },
        "UserBean": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "joinedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "admin": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "MemberRoleBean": {
            "type": "object",
            "properties": {
                "roleId": {
                    "type": "string"
                },
                "roleName": {
                    "type": "string"
                }
            }
        },
        "IOrganizationResource": {
            "type": "object"
        },
        "EntityTag": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                },
                "weak": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "ResponseStatsPerAppBean": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ResponseStatsDataPoint"
                    }
                }
            }
        },
        "SearchResultsBeanServiceSummaryBean": {
            "type": "object",
            "properties": {
                "beans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServiceSummaryBean"
                    }
                },
                "totalSize": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "PolicyChainBean": {
            "type": "object",
            "properties": {
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PolicySummaryBean"
                    }
                }
            }
        },
        "PolicyBean": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "Application",
                        "Plan",
                        "Service"
                    ]
                },
                "organizationId": {
                    "type": "string"
                },
                "entityId": {
                    "type": "string"
                },
                "entityVersion": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "configuration": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "modifiedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "definition": {
                    "$ref": "#/definitions/PolicyDefinitionBean"
                },
                "orderIndex": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "GatewayTestResultBean": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "default": false
                },
                "detail": {
                    "type": "string"
                }
            }
        },
        "UserPermissionsBean": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/PermissionBean"
                    }
                }
            }
        },
        "ResponseStatsSummaryBean": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "failures": {
                    "type": "integer",
                    "format": "int64"
                },
                "errors": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "IStorage": {
            "type": "object"
        },
        "IUserResource": {
            "type": "object"
        },
        "OrganizationSummaryBean": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "numApps": {
                    "type": "integer",
                    "format": "int32"
                },
                "numServices": {
                    "type": "integer",
                    "format": "int32"
                },
                "numMembers": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Response": {
            "type": "object",
            "properties": {
                "length": {
                    "type": "integer",
                    "format": "int32"
                },
                "language": {
                    "$ref": "#/definitions/Locale"
                },
                "location": {
                    "type": "string",
                    "format": "uri"
                },
                "lastModified": {
                    "type": "string",
                    "format": "date-time"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                },
                "status": {
                    "type": "integer",
                    "format": "int32"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                },
                "cookies": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/NewCookie"
                    }
                },
                "entity": {
                    "type": "object"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "allowedMethods": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "entityTag": {
                    "$ref": "#/definitions/EntityTag"
                },
                "links": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "stringHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "mediaType": {
                    "$ref": "#/definitions/MediaType"
                },
                "statusInfo": {
                    "$ref": "#/definitions/StatusType"
                }
            }
        },
        "UpdateServiceVersionBean": {
            "type": "object",
            "properties": {
                "endpoint": {
                    "type": "string"
                },
                "endpointType": {
                    "type": "string",
                    "enum": [
                        "rest",
                        "soap"
                    ]
                },
                "endpointProperties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "gateways": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/ServiceGatewayBean"
                    }
                },
                "publicService": {
                    "type": "boolean",
                    "default": false
                },
                "plans": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/ServicePlanBean"
                    }
                }
            }
        },
        "NewContractBean": {
            "type": "object",
            "properties": {
                "serviceOrgId": {
                    "type": "string"
                },
                "serviceId": {
                    "type": "string"
                },
                "serviceVersion": {
                    "type": "string"
                },
                "planId": {
                    "type": "string"
                }
            }
        },
        "StatusType": {
            "type": "object",
            "properties": {
                "family": {
                    "type": "string",
                    "enum": [
                        "INFORMATIONAL",
                        "SUCCESSFUL",
                        "REDIRECTION",
                        "CLIENT_ERROR",
                        "SERVER_ERROR",
                        "OTHER"
                    ]
                },
                "statusCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "reasonPhrase": {
                    "type": "string"
                }
            }
        },
        "NewApplicationBean": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "initialVersion": {
                    "type": "string"
                }
            }
        },
        "UpdatePolicyBean": {
            "type": "object",
            "properties": {
                "configuration": {
                    "type": "string"
                }
            }
        },
        "SearchResultsBeanRoleBean": {
            "type": "object",
            "properties": {
                "beans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RoleBean"
                    }
                },
                "totalSize": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ContractSummaryBean": {
            "type": "object",
            "properties": {
                "contractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "apikey": {
                    "type": "string"
                },
                "appOrganizationId": {
                    "type": "string"
                },
                "appOrganizationName": {
                    "type": "string"
                },
                "appId": {
                    "type": "string"
                },
                "appName": {
                    "type": "string"
                },
                "appVersion": {
                    "type": "string"
                },
                "serviceOrganizationId": {
                    "type": "string"
                },
                "serviceOrganizationName": {
                    "type": "string"
                },
                "serviceId": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "serviceVersion": {
                    "type": "string"
                },
                "serviceDescription": {
                    "type": "string"
                },
                "planName": {
                    "type": "string"
                },
                "planId": {
                    "type": "string"
                },
                "planVersion": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ServicePlanSummaryBean": {
            "type": "object",
            "properties": {
                "planId": {
                    "type": "string"
                },
                "planName": {
                    "type": "string"
                },
                "planDescription": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "UpdatePlanBean": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}