{
  "swagger": "2.0",
  "info": {
    "title": "ACPAAS Multilanguage Engine",
    "description": "Manage translations across your projects.\n",
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "API documentation",
    "url": "http://localhost:3000/api-docs"
  },
  "host": "localhost:3000",
  "schemes": [
    "http"
  ],
  "basePath": "/api/v1",
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "api_key": []
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "security": [],
        "summary": "Ask for an API-key",
        "description": "New projects POST their request for an API-key to this endpoint. Your request will be\nforwarded to a Superadmin and you will receive an email detailing either your acceptance\nor rejection.\n",
        "parameters": [
          {
            "name": "registration",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Registration"
            }
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Register"
        ],
        "responses": {
          "200": {
            "description": "Acknowledgment that we received your request",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          },
          "400": {
            "description": "Error while processing your data. Most often this will be a Validation Error. You can find more info in the body",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      }
    },
    "/new-api-key": {
      "get": {
        "security": [],
        "summary": "Ask for a new API-key",
        "description": "In case you doubt the secrecy of your current API-key, you can ask a new one. Your old one will be revoked immediately and all next calls to the API should be done with the new key",
        "tags": [
          "Register"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Your new API key",
            "schema": {
              "$ref": "#/definitions/NewApiKeyResponse"
            }
          },
          "401": {
            "description": "Your current API-key was not recognized"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      }
    },
    "/me": {
      "get": {
        "summary": "Get your own user-info",
        "description": "Returns a user-model associated with the current API-key",
        "tags": [
          "Register"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Your own user info",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "401": {
            "description": "API-key was not recognized"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "security": [
          {
            "api_key_superuser": []
          }
        ],
        "summary": "A list of the users (Only for Superadmins)",
        "description": "This endpoint return a list of users. This is only accessible to Superadmins",
        "parameters": [
          {
            "$ref": "#/parameters/pageParam"
          },
          {
            "$ref": "#/parameters/pageSizeParam"
          },
          {
            "name": "only_new",
            "in": "query",
            "description": "Return only the new registrations",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Register"
        ],
        "responses": {
          "200": {
            "description": "An array of users",
            "schema": {
              "$ref": "#/definitions/UserListResponse"
            },
            "headers": {
              "X-Rombit-Pagination-TotalRecords": {
                "description": "Total count of records when paginating",
                "type": "number"
              },
              "X-Rombit-Pagination-TotalPages": {
                "description": "Total count of pages when paginating",
                "type": "number"
              },
              "X-Rombit-Pagination-Page": {
                "description": "Currently returned page",
                "type": "number"
              },
              "X-Rombit-Pagination-PageSize": {
                "description": "Number of records in the page",
                "type": "number"
              }
            }
          },
          "401": {
            "description": "Only API-KEYS linked to a SuperAdmin have access to this endpoint. All other users, will receive this response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      }
    },
    "/users/{id}/approve": {
      "post": {
        "security": [
          {
            "api_key_superuser": []
          }
        ],
        "summary": "Approve the request for a project",
        "description": "Approve the request for a project and send this user a projectadmin API-key (only for superadmins)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user to approve",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          },
          {
            "name": "userapproval",
            "in": "body",
            "description": "Data associated with the approval of the user",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserApprovalObject"
            }
          }
        ],
        "tags": [
          "Register"
        ],
        "responses": {
          "200": {
            "description": "Returns a defaultResponse with success=true when all went well. On errors/warnings, you can find more info in the msgs-property",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            },
            "401": {
              "description": "Only API-KEYS linked to a SuperAdmin have access to this endpoint. All other users, will receive this response"
            },
            "default": {
              "description": "Unexpected error",
              "schema": {
                "$ref": "#/definitions/DefaultResponse"
              }
            }
          }
        }
      }
    },
    "/users/{id}/decline": {
      "post": {
        "security": [
          {
            "api_key_superuser": []
          }
        ],
        "summary": "Decline the request for a project",
        "description": "Decline the request for a project and send this user a decline-email (only for superadmins)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user to approve",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          },
          {
            "name": "userapproval",
            "in": "body",
            "description": "Data associated with the declinse of the user",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserApprovalObject"
            }
          }
        ],
        "tags": [
          "Register"
        ],
        "responses": {
          "200": {
            "description": "Returns a defaultResponse with success=true when all went well. On errors/warnings, you can find more info in the msgs-property",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            },
            "401": {
              "description": "Only API-KEYS linked to a SuperAdmin have access to this endpoint. All other users, will receive this response"
            },
            "default": {
              "description": "Unexpected error",
              "schema": {
                "$ref": "#/definitions/DefaultResponse"
              }
            }
          }
        }
      }
    },
    "/projects": {
      "get": {
        "summary": "A list of the projects (Only for Superadmins)",
        "description": "This endpoint return a list of projects. This is only accessible to Superadmins",
        "security": [
          {
            "api_key_superuser": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pageParam"
          },
          {
            "$ref": "#/parameters/pageSizeParam"
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Projects"
        ],
        "responses": {
          "200": {
            "description": "An array of projects",
            "schema": {
              "$ref": "#/definitions/ProjectListResponse"
            },
            "headers": {
              "X-Rombit-Pagination-TotalRecords": {
                "description": "Total count of records when paginating",
                "type": "number"
              },
              "X-Rombit-Pagination-TotalPages": {
                "description": "Total count of pages when paginating",
                "type": "number"
              },
              "X-Rombit-Pagination-Page": {
                "description": "Currently returned page",
                "type": "number"
              },
              "X-Rombit-Pagination-PageSize": {
                "description": "Number of records in the page",
                "type": "number"
              }
            }
          },
          "401": {
            "description": "Only API-KEYS linked to a SuperAdmin have access to this endpoint. All other users, will receive this response"
          },
          "400": {
            "description": "Error while processing your data. Most often this will be a Validation Error. You can find more info in the body",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      },
      "post": {
        "summary": "Create a new project (Only for Superadmins)",
        "description": "Create a new project. This is only accessible to Superadmins",
        "security": [
          {
            "api_key_superuser": []
          }
        ],
        "parameters": [
          {
            "name": "project",
            "in": "body",
            "description": "A new project model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectPostRequest"
            }
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Projects"
        ],
        "responses": {
          "200": {
            "description": "The newly created project",
            "schema": {
              "$ref": "#/definitions/ProjectResponse"
            }
          },
          "400": {
            "description": "Error while processing your data. Most often this will be a Validation Error. You can find more info in the body",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project by that name is found for your API-key"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      }
    },
    "/projects/{id}": {
      "get": {
        "summary": "Get the information of 1 project",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Projects"
        ],
        "responses": {
          "200": {
            "description": "1 Project",
            "schema": {
              "$ref": "#/definitions/ProjectResponse"
            }
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project by that name is found for your API-key"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      },
      "put": {
        "summary": "Save a modified project record",
        "description": "Used to save modified project settings",
        "security": [
          {
            "api_key_projectadmin": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "in": "body",
            "description": "The modified project-info model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectPutRequest"
            }
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Projects"
        ],
        "responses": {
          "200": {
            "description": "The updated model",
            "schema": {
              "$ref": "#/definitions/ProjectResponse"
            }
          },
          "400": {
            "description": "Error while processing your data. Most often this will be a Validation Error. You can find more info in the body",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project by that name is found for your API-key"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a project (Only for Superadmins)",
        "security": [
          {
            "api_key_superuser": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Projects"
        ],
        "responses": {
          "200": {
            "description": "If success == true, the project was removed correctly. In all other cases, you will find error-message in the msgs-property",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project by that name is found for your API-key"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      }
    },
    "/projects/{id}/languages": {
      "get": {
        "summary": "Get all the available languages in a project",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pageParam"
          },
          {
            "$ref": "#/parameters/pageSizeParam"
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Languages"
        ],
        "responses": {
          "200": {
            "description": "An array of languages",
            "schema": {
              "$ref": "#/definitions/LanguageListResponse"
            }
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project by that id is found for your API-key"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      },
      "post": {
        "summary": "Add a new language to this project",
        "security": [
          {
            "api_key_projectadmin": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "type": "string"
          },
          {
            "name": "language",
            "in": "body",
            "description": "A new Language model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Language"
            }
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Languages"
        ],
        "responses": {
          "200": {
            "description": "The newly created Language model",
            "schema": {
              "$ref": "#/definitions/LanguageResponse"
            }
          },
          "400": {
            "description": "Error while processing your data. Most often this will be a Validation Error. You can find more info in the body",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project by that id is found for your API-key"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      }
    },
    "/projects/{id}/languages/{lang}": {
      "delete": {
        "summary": "Delete a language",
        "security": [
          {
            "api_key_projectadmin": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "type": "string"
          },
          {
            "name": "lang",
            "in": "path",
            "description": "The language code we want to delete",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Languages"
        ],
        "responses": {
          "200": {
            "description": "If success == true, the language was removed correctly. In all other cases, you will find error-message in the msgs-property",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project or language by that name is found for your API-key. The error-messages will contain more info about the entity we could not find"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      }
    },
    "/projects/{id}/files": {
      "get": {
        "summary": "Get all the available files in a project",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pageParam"
          },
          {
            "$ref": "#/parameters/pageSizeParam"
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Files"
        ],
        "responses": {
          "200": {
            "description": "An array of files",
            "schema": {
              "$ref": "#/definitions/FileListResponse"
            }
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project by that id is found for your API-key"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      },
      "post": {
        "summary": "Add a new file to this project",
        "security": [
          {
            "api_key_projectadmin": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "body",
            "description": "A new File model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/File"
            }
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Files"
        ],
        "responses": {
          "200": {
            "description": "The newly created File model",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          },
          "400": {
            "description": "Error while processing your data. Most often this will be a Validation Error. You can find more info in the body",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project by that id is found for your API-key"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      }
    },
    "/projects/{id}/files/{file_id}": {
      "get": {
        "summary": "Get a File model",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "type": "string"
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The ID of the file we want to change",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pageParam"
          },
          {
            "$ref": "#/parameters/pageSizeParam"
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Files"
        ],
        "responses": {
          "200": {
            "description": "The File model",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          },
          "400": {
            "description": "Error while processing your data. Most often this will be a Validation Error. You can find more info in the body",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project or file by that id is found for your API-key"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a file",
        "security": [
          {
            "api_key_projectadmin": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "type": "string"
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The ID of the file we want to delete",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Files"
        ],
        "responses": {
          "200": {
            "description": "If success == true, the file was removed correctly. In all other cases, you will find error-message in the msgs-property",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project or file by that id is found for your API-key. The error-messages will contain more info about the entity we could not find"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      }
    },
    "/projects/{id}/translators": {
      "get": {
        "summary": "Get all the Translators in a project",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pageParam"
          },
          {
            "$ref": "#/parameters/pageSizeParam"
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Translators"
        ],
        "responses": {
          "200": {
            "description": "An array of Translator models",
            "schema": {
              "$ref": "#/definitions/TranslatorListResponse"
            }
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project by that id is found for your API-key"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      },
      "post": {
        "summary": "Add a new Translator to this project",
        "security": [
          {
            "api_key_projectadmin": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "type": "string"
          },
          {
            "name": "translator",
            "in": "body",
            "description": "A new Translator model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Translator"
            }
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Translators"
        ],
        "responses": {
          "200": {
            "description": "The newly created Translator model",
            "schema": {
              "$ref": "#/definitions/TranslatorResponse"
            }
          },
          "400": {
            "description": "Error while processing your data. Most often this will be a Validation Error. You can find more info in the body",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project by that id is found for your API-key"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      }
    },
    "/projects/{id}/translators/{translator_id}": {
      "delete": {
        "summary": "Delete a Translator",
        "security": [
          {
            "api_key_projectadmin": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "type": "string"
          },
          {
            "name": "translator_id",
            "in": "path",
            "description": "The ID of the translator we want to delete",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Translators"
        ],
        "responses": {
          "200": {
            "description": "If success == true, the translator was removed correctly. In all other cases, you will find error-message in the msgs-property",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          },
          "400": {
            "description": "Error while processing your data. Most often this will be a Validation Error. You can find more info in the body",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project or translator by that name is found for your API-key. The error-messages will contain more info about the entity we could not find"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      }
    },
    "/projects/{id}/export": {
      "get": {
        "summary": "Receive a zip-file with all the files in all defined languages",
        "description": "This is 1 of the few calls that does not return a JSON payload, but sends a binary zip-file",
        "produces": [
          "application/zip"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "type": "string"
          },
          {
            "name": "format",
            "description": "The format of the exported files. Can be 1 of the 5 formats: json, po, xliff, resx or csv",
            "in": "query",
            "default": "json",
            "required": false,
            "type": "string",
            "enum": [
              "json",
              "po",
              "xliff",
              "resx",
              "csv"
            ]
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Export"
        ],
        "responses": {
          "200": {
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project or file by that name is found for your API-key. The error-messages will contain more info about the entity we could not find"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      }
    },
    "/projects/{id}/files/{file_id}/export": {
      "get": {
        "summary": "Returns a zipfile containing the translations in this file",
        "description": "This operation always returns a zipfile, even if you request the export for 1 language. If you do not specify a `format`, the default `json` format will be used.<br/>\nIf you do not specify a language, you will receive an export for each language defined in the project",
        "produces": [
          "application/zip"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "type": "string"
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The ID of the file we want to export",
            "required": true,
            "type": "string"
          },
          {
            "name": "format",
            "description": "The format of the exported files. Can be 1 of the 5 formats: json, po, xliff, resx or csv",
            "in": "query",
            "default": "json",
            "required": false,
            "type": "string",
            "enum": [
              "json",
              "po",
              "xliff",
              "resx",
              "csv"
            ]
          },
          {
            "name": "lang",
            "description": "The language code (locale) we want to have exported.<br/>\nThis should be one of the language-codes defined by the project, for instance: 'en-UK'.<br/>\nIf none is given, you will get a zipfile with exports for each language in the project",
            "in": "query",
            "default": "",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Export"
        ],
        "responses": {
          "200": {
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project or file by that name is found for your API-key. The error-messages will contain more info about the entity we could not find"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      }
    },
    "/projects/{id}/files/{file_id}/import": {
      "post": {
        "summary": "Import a language format",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "The API will parse the format first and match the language of the file with the languages defined in the project. In case of a mismatch, we will not import and throw an errormessage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "type": "string"
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The ID of the file we want to import into",
            "required": true,
            "type": "string"
          },
          {
            "name": "languagefile",
            "in": "formData",
            "description": "The contents of the file to import",
            "required": true,
            "type": "file"
          },
          {
            "name": "overwrite",
            "in": "query",
            "description": "Overwrite existing labels in the system. Before overwriting a new revision will be made",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Import"
        ],
        "responses": {
          "200": {
            "description": "Check the property `success` to see if the import succeeded.<br/>\nIn case `success: false`, you will find errormessage in the `msgs` property",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          },
          "400": {
            "description": "Error while processing your data. Most often this will be a Validation Error. You can find more info in the body",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project or file by that id is found for your API-key. The error-messages will contain more info about the entity we could not find"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      }
    },
    "/projects/{id}/files/{file_id}/translations": {
      "get": {
        "summary": "Get a list of translations for this file",
        "description": "Returns an array of Label models. There are a bunch of query-params available to get a filtered list",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "type": "string"
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The ID of the file",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pageParam"
          },
          {
            "$ref": "#/parameters/pageSizeParam"
          },
          {
            "name": "lang",
            "description": "The language code (locale) we want to filter on.<br/>\nThis should be one of the language-codes defined by the project, for instance: 'en-GB'.<br/>\nIf none is given, we will return all . This parameter is required if you use the `status` parameter or when use the `search` parameter. ",
            "in": "query",
            "default": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Only return translations with a status listed in the array you provide. When using this parameter, also define the `lang`-parameter on which you want to filter.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "untranslated",
              "translated",
              "needsmorework",
              "verified"
            ]
          },
          {
            "name": "search",
            "in": "query",
            "description": "Only return labels where the search-string matches the label-name or 1 of the translations. Be sure to also set the `lang` parameter when using this.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Translations"
        ],
        "responses": {
          "200": {
            "description": "An array of Labels",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LabelListResponse"
              }
            },
            "headers": {
              "X-Rombit-Pagination-TotalRecords": {
                "description": "Total count of records when paginating",
                "type": "number"
              },
              "X-Rombit-Pagination-TotalPages": {
                "description": "Total count of pages when paginating",
                "type": "number"
              },
              "X-Rombit-Pagination-Page": {
                "description": "Currently returned page",
                "type": "number"
              },
              "X-Rombit-Pagination-PageSize": {
                "description": "Number of records in the page",
                "type": "number"
              }
            }
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project or file by that id is found for your API-key. The error-messages will contain more info about the entity we could not find"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      },
      "post": {
        "summary": "Save a list of new translations for this file",
        "description": "Send a list of new labels to insert into this file",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "type": "string"
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The ID of the file",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "body",
            "type": "array",
            "description": "A list of new Labels",
            "required": true,
            "items": {
              "$ref": "#/definitions/Label"
            }
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Translations"
        ],
        "responses": {
          "200": {
            "description": "Acknowledgement of the success of the operation. Specific to this request, you will receive 'success = true' when the operation handled your array of Labels correctly but the import of individual Labels may have given warnings/errors which you will find in the `msgs`-property. You will also receive a success-message in the `msgs`-property when a Label is correctly added.",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          },
          "400": {
            "description": "Error while processing your data. Most often this will be a Validation Error. You can find more info in the body",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project or file by that id is found for your API-key. The error-messages will contain more info about the entity we could not find"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      },
      "put": {
        "summary": "Save a list of modified translations for this file",
        "description": "Save an updated list of translations for this file. All translations should already exist, new labels will not be imported and you will receive an errormessage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "type": "string"
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The ID of the file",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "body",
            "type": "array",
            "description": "A list of new Labels",
            "required": true,
            "items": {
              "$ref": "#/definitions/Label"
            }
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Translations"
        ],
        "responses": {
          "200": {
            "description": "Acknowledgement of the success of the operation. In case the `success` property is `false`, you will find 1 or more error-messages in the `msgs` array",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          },
          "400": {
            "description": "Error while processing your data. Most often this will be a Validation Error. You can find more info in the body",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project or file by that id is found for your API-key. The error-messages will contain more info about the entity we could not find"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      }
    },
    "/projects/{id}/files/{file_id}/translations/{label_id}": {
      "get": {
        "summary": "Get the data and translations for a specific Label",
        "description": "Returns a Label model",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "type": "string"
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The ID of the file",
            "required": true,
            "type": "string"
          },
          {
            "name": "label_id",
            "in": "path",
            "description": "The ID of the label you want to receive",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Translations"
        ],
        "responses": {
          "200": {
            "description": "A Label model",
            "schema": {
              "$ref": "#/definitions/LabelResponse"
            }
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project or file by that id is found for your API-key. The error-messages will contain more info about the entity we could not find"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      },
      "put": {
        "summary": "Save a modified Label",
        "description": "Save changes to a modified Label model",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "type": "string"
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The ID of the file",
            "required": true,
            "type": "string"
          },
          {
            "name": "label_id",
            "in": "path",
            "description": "The ID of the label you want to receive",
            "required": true,
            "type": "string"
          },
          {
            "name": "label",
            "in": "body",
            "description": "The modified Label model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Label"
            }
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Translations"
        ],
        "responses": {
          "200": {
            "description": "The updated Label model",
            "schema": {
              "$ref": "#/definitions/LabelResponse"
            }
          },
          "400": {
            "description": "Error while processing your data. Most often this will be a Validation Error. You can find more info in the body",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project or file by that id is found for your API-key. The error-messages will contain more info about the entity we could not find"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a label",
        "description": "Delete a specific Label from the file",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "type": "string"
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The ID of the file",
            "required": true,
            "type": "string"
          },
          {
            "name": "label_id",
            "in": "path",
            "description": "The ID of the label you want to receive",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Translations"
        ],
        "responses": {
          "200": {
            "description": "The Label was succesfully deleted when `success` is `true`. Else you will find the reason for failure in the `msgs` array",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project or file by that id is found for your API-key. The error-messages will contain more info about the entity we could not find"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      }
    },
    "/projects/{id}/files/{file_id}/translations/{label_id}/revisions": {
      "get": {
        "summary": "Get the revision history for all translations of a specific Label",
        "description": "Returns an array with all the revisions per language",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "type": "string"
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The ID of the file",
            "required": true,
            "type": "string"
          },
          {
            "name": "label_id",
            "in": "path",
            "description": "The ID of the label you want to receive",
            "required": true,
            "type": "string"
          },
          {
            "name": "lang",
            "in": "query",
            "description": "(optional) The locale for which you want revisions. By default you will receive an array with the revisions for all languages",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pageParam"
          },
          {
            "$ref": "#/parameters/pageSizeParam"
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Translations"
        ],
        "responses": {
          "200": {
            "description": "@todo A Revision model. Warning: This response is not yet complete and subject to change",
            "schema": {
              "$ref": "#/definitions/RevisionResponse"
            }
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project or file by that id is found for your API-key. The error-messages will contain more info about the entity we could not find"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      }
    },
    "/projects/{id}/files/{file_id}/translations/{label_id}/comments": {
      "post": {
        "summary": "Post comments for this specific Label",
        "description": "Post a comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "type": "string"
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The ID of the file",
            "required": true,
            "type": "string"
          },
          {
            "name": "label_id",
            "in": "path",
            "description": "The ID of the label you want to receive",
            "required": true,
            "type": "string"
          },
          {
            "name": "comment",
            "in": "body",
            "description": "The Comment model you want to save",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Comments"
        ],
        "responses": {
          "200": {
            "description": "A Comments model",
            "schema": {
              "$ref": "#/definitions/CommentResponse"
            }
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project/file or label by that id is found for your API-key. The error-messages will contain more info about the entity we could not find"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      }
    },
    "/projects/{id}/files/{file_id}/translations/{label_id}/comments/{comment_id}": {
      "delete": {
        "summary": "Delete a comment of this specific Label",
        "description": "Delete 1 comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "type": "string"
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The ID of the file",
            "required": true,
            "type": "string"
          },
          {
            "name": "label_id",
            "in": "path",
            "description": "The ID of the label",
            "required": true,
            "type": "string"
          },
          {
            "name": "comment_id",
            "in": "path",
            "description": "The ID of the comment",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Comments"
        ],
        "responses": {
          "200": {
            "description": "If success == true, the comment was removed correctly. In all other cases, you will find error-message in the msgs-property",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project/file or label by that id is found for your API-key. The error-messages will contain more info about the entity we could not find"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      }
    },
    "/suggestions": {
      "post": {
        "summary": "Get suggestions",
        "description": "Returns an array of suggestions",
        "parameters": [
          {
            "name": "suggestion",
            "in": "body",
            "description": "A Suggestion request Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SuggestionRequest"
            }
          },
          {
            "$ref": "#/parameters/pageParam"
          },
          {
            "$ref": "#/parameters/pageSizeParam"
          },
          {
            "$ref": "#/parameters/langHeaderParam"
          }
        ],
        "tags": [
          "Suggestions"
        ],
        "responses": {
          "200": {
            "description": "@todo A Suggestion model. Warning: This response is not yet complete and subject to change",
            "schema": {
              "$ref": "#/definitions/SuggestionResponse"
            }
          },
          "401": {
            "description": "You don't have access to this project"
          },
          "404": {
            "description": "No project/file or label by that id is found for your API-key. The error-messages will contain more info about the entity we could not find"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/DefaultResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "X-HTTP-API-KEY",
      "in": "header",
      "description": "We require a header 'X-HTTP-API-KEY' for all operations besides /register",
      "x-authorize": "../app/lib/is_translator.js"
    },
    "api_key_superuser": {
      "type": "apiKey",
      "name": "X-HTTP-API-KEY",
      "in": "header",
      "description": "We require a header 'X-HTTP-API-KEY' for all operations besides /register",
      "x-authorize": "../app/lib/is_superadmin.js"
    },
    "api_key_projectadmin": {
      "type": "apiKey",
      "name": "X-HTTP-API-KEY",
      "in": "header",
      "description": "We require a header 'X-HTTP-API-KEY' for all operations besides /register",
      "x-authorize": "../app/lib/is_projectadmin.js"
    }
  },
  "parameters": {
    "pageParam": {
      "name": "page",
      "in": "query",
      "description": "The number of the page. This is used in conjunction with the `page_size` parameter",
      "required": false,
      "type": "number",
      "format": "integer",
      "default": 1
    },
    "pageSizeParam": {
      "name": "page_size",
      "in": "query",
      "description": "How many records per page do we return?",
      "required": false,
      "type": "number",
      "format": "integer",
      "default": 10
    },
    "langHeaderParam": {
      "name": "Accept-Language",
      "in": "header",
      "description": "Which language does the backend when returning messages",
      "required": false,
      "type": "string",
      "default": "en-GB"
    }
  },
  "definitions": {
    "NewApiKeyResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/DefaultResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/ApiKey"
            }
          }
        }
      ]
    },
    "ApiKey": {
      "type": "object",
      "description": "An object containing your API-key",
      "required": [
        "api-key"
      ],
      "properties": {
        "api_key": {
          "type": "string",
          "description": "Your new API key. All your next calls will have to be done with this key"
        }
      }
    },
    "UserListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/DefaultResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserInvite"
              }
            }
          }
        }
      ]
    },
    "UserResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/DefaultResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/UserInvite"
            }
          }
        }
      ]
    },
    "UserInvite": {
      "type": "object",
      "required": [
        "email",
        ""
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the user in the ACPAAS Multilang backend"
        },
        "email": {
          "type": "string",
          "description": "E-Mail address of the user"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Date when this record was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last time this record was updated"
        },
        "validated": {
          "type": "string",
          "format": "date-time",
          "description": "Contains the date this user was validated by an Admin"
        },
        "projectName": {
          "type": "string",
          "description": "Name of the project"
        },
        "projectId": {
          "type": "string",
          "description": "Id of the project",
          "default": ""
        },
        "roles": {
          "type": "array",
          "description": "Roles of this user",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UserApprovalObject": {
      "type": "object",
      "properties": {}
    },
    "ProjectListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/DefaultResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectInfo"
              }
            }
          }
        }
      ]
    },
    "ProjectResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/DefaultResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/ProjectInfo"
            }
          }
        }
      ]
    },
    "ProjectPostRequest": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of your project"
        },
        "admins": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserInvite"
          }
        }
      }
    },
    "ProjectPutRequest": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The project ID"
        },
        "name": {
          "type": "string",
          "description": "The name of your project"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Date when this record was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last time this record was updated"
        },
        "settings": {
          "type": "object",
          "properties": {
            "public": {
              "type": "boolean",
              "description": "Can the translations in this project be used as suggestions in other projects?",
              "default": false
            },
            "review": {
              "type": "boolean",
              "description": "Translations are only exported/returned when they are approved by a Project Admin",
              "default": true
            },
            "crowdsourced": {
              "type": "boolean",
              "description": "Can anybody with the project URL add/change translations?",
              "default": false
            }
          }
        }
      }
    },
    "ProjectInfo": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The project ID"
        },
        "name": {
          "type": "string",
          "description": "The name of your project"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Date when this record was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last time this record was updated"
        },
        "statistics": {
          "$ref": "#/definitions/Statistics"
        },
        "settings": {
          "type": "object",
          "properties": {
            "public": {
              "type": "boolean",
              "description": "Can the translations in this project be used as suggestions in other projects?",
              "default": false
            },
            "review": {
              "type": "boolean",
              "description": "Translations are only exported/returned when they are approved by a Project Admin",
              "default": true
            },
            "crowdsourced": {
              "type": "boolean",
              "description": "Can anybody with the project URL add/change translations?",
              "default": false
            }
          }
        }
      }
    },
    "Project": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The project ID"
        },
        "name": {
          "type": "string",
          "description": "The name of your project"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Date when this record was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last time this record was updated"
        },
        "statistics": {
          "$ref": "#/definitions/Statistics"
        },
        "settings": {
          "type": "object",
          "properties": {
            "public": {
              "type": "boolean",
              "description": "Can the translations in this project be used as suggestions in other projects?",
              "default": false
            },
            "review": {
              "type": "boolean",
              "description": "Translations are only exported/returned when they are approved by a Project Admin",
              "default": true
            },
            "crowdsourced": {
              "type": "boolean",
              "description": "Can anybody with the project URL add/change translations?",
              "default": false
            }
          }
        },
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/File"
          }
        },
        "translators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Translator"
          }
        },
        "languages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Language"
          }
        }
      }
    },
    "TranslatorListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/DefaultResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Translator"
              }
            }
          }
        }
      ]
    },
    "TranslatorResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/DefaultResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/Translator"
            }
          }
        }
      ]
    },
    "Translator": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Date when this record was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last time this record was updated"
        },
        "statistics": {
          "$ref": "#/definitions/Statistics"
        },
        "projectId": {
          "type": "string",
          "description": "ID of the project this translator is attached to"
        }
      }
    },
    "LanguageListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/DefaultResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Language"
              }
            }
          }
        }
      ]
    },
    "LanguageResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/DefaultResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/Language"
            }
          }
        }
      ]
    },
    "Language": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "locale": {
          "type": "string",
          "description": "The locale-code of this language. Examples: `en-UK`, `nl-BE`, `fr`, `sr-Cyrl`. <br/>This is conform to how i18n defines locales.<br/>A list of codes can be found at http://www.i18nguy.com/unicode/language-identifiers.html"
        },
        "name": {
          "type": "string",
          "description": "This is the long descriptive name of a language, for instance: `English`"
        },
        "statistics": {
          "$ref": "#/definitions/Statistics"
        }
      }
    },
    "FileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/DefaultResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/File"
              }
            }
          }
        }
      ]
    },
    "FileResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/DefaultResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/File"
            }
          }
        }
      ]
    },
    "File": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Date when this record was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last time this record was updated"
        },
        "statistics": {
          "$ref": "#/definitions/Statistics"
        }
      }
    },
    "LabelListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/DefaultResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Label"
              }
            }
          }
        }
      ]
    },
    "LabelResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/DefaultResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/Label"
            }
          }
        }
      ]
    },
    "Label": {
      "type": "object",
      "required": [
        "label"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The Acpaas ID of this label"
        },
        "label": {
          "type": "string",
          "description": "Name of this label. Should be unique across your File."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when this Label was made"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when this Label was updated"
        },
        "translations": {
          "type": "array",
          "description": "An array of Translation Models",
          "items": {
            "$ref": "#/definitions/Translation"
          }
        },
        "comments": {
          "type": "array",
          "description": "An array of Comments Models",
          "items": {
            "$ref": "#/definitions/Comment"
          }
        }
      }
    },
    "Translation": {
      "type": "object",
      "required": [
        "locale"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "ACPAAS ID of this Translation"
        },
        "locale": {
          "type": "string",
          "description": "The locale-code of this language. Examples: `en-UK`, `nl-BE`, `fr`, `sr-Cyrl`. <br/>This is conform to how i18n defines locales.<br/>A list of codes can be found at http://www.i18nguy.com/unicode/language-identifiers.html"
        },
        "content": {
          "type": "string",
          "description": "The translated text",
          "default": "",
          "minLength": 0
        },
        "status": {
          "type": "string",
          "description": "The status of this translation",
          "enum": [
            "untranslated",
            "translated",
            "needsmorework",
            "verified"
          ]
        },
        "translator": {
          "$ref": "#/definitions/Translator"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last time this record was updated"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Time that this record was created"
        },
        "revisionCount": {
          "type": "integer",
          "description": "Amount of revisions we have for this label"
        }
      }
    },
    "RevisionResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/DefaultResponse"
        },
        {
          "type": "object",
          "description": "For each language in your project, you will receive an array of revisions for the given label",
          "example": {
            "nl-BE": [
              {
                "locale": "nl-BE",
                "content": "Dit was dus de vorige goedgekeurde vertaling",
                "translator": {
                  "id": "53da645e3a51f58b06d63af2",
                  "email": "jo@rombit.be",
                  "created": "2015-08-14T03:00:11.200Z",
                  "updated": "2015-08-14T03:04:11.200Z"
                },
                "created": "2015-08-14T09:08:11.157Z"
              },
              {
                "locale": "nl-BE",
                "content": "Dit was dus de eerste goedgekeurde vertaling",
                "translator": {
                  "id": "53da645e3a51f58b06d63af2",
                  "email": "jo@rombit.be",
                  "created": "2015-08-14T03:00:11.200Z",
                  "updated": "2015-08-14T03:04:11.200Z"
                },
                "created": "2015-08-14T09:02:11.157Z"
              }
            ]
          },
          "properties": {
            "data": {
              "en-GB": {
                "type": "array",
                "description": "All the revisions of this label for the en-GB translation",
                "items": {
                  "$ref": "#/definitions/Revision"
                }
              },
              "nl-BE": {
                "type": "array",
                "description": "All the revisions of this label for the nl-BE translation",
                "items": {
                  "$ref": "#/definitions/Revision"
                }
              }
            }
          }
        }
      ]
    },
    "Revision": {
      "type": "object",
      "required": [
        "locale",
        "content"
      ],
      "properties": {
        "locale": {
          "type": "string",
          "description": "The locale-code of this language. Examples: `en-UK`, `nl-BE`, `fr`, `sr-Cyrl`. <br/>This is conform to how i18n defines locales.<br/>A list of codes can be found at http://www.i18nguy.com/unicode/language-identifiers.html"
        },
        "content": {
          "type": "string",
          "description": "The translated text",
          "default": ""
        },
        "translator": {
          "$ref": "#/definitions/Translator"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when this revision was made"
        },
        "status": {
          "type": "string",
          "description": "Status this revision was in"
        }
      }
    },
    "Statistics": {
      "type": "object",
      "properties": {
        "needsmorework": {
          "type": "integer",
          "description": "Count of Needsmorework labels"
        },
        "verified": {
          "type": "integer",
          "description": "Count of Verified labels"
        },
        "translated": {
          "type": "integer",
          "description": "Count of Translated labels"
        },
        "untranslated": {
          "type": "integer",
          "description": "Count of Untranslated labels"
        },
        "total": {
          "type": "integer",
          "description": "Count of Total statistics"
        }
      }
    },
    "CommentResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/DefaultResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/Comment"
            }
          }
        }
      ]
    },
    "Comment": {
      "type": "object",
      "required": [
        "text"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "ACPAAS ID of this Comment"
        },
        "text": {
          "type": "string",
          "description": "The actual message"
        },
        "email": {
          "type": "string",
          "description": "Email of the user who posted this comment"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Date when this comment was made"
        }
      }
    },
    "SuggestionResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/DefaultResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/Suggestion"
            }
          }
        }
      ]
    },
    "SuggestionRequest": {
      "type": "object",
      "required": [
        "from_lang",
        "to_lang",
        "content"
      ],
      "properties": {
        "from_lang": {
          "type": "string",
          "description": "The locale-code of this language of the original content. Examples: `en-UK`, `nl-BE`, `fr`, `sr-Cyrl`. <br/>This is conform to how i18n defines locales.<br/>A list of codes can be found at http://www.i18nguy.com/unicode/language-identifiers.html"
        },
        "to_lang": {
          "type": "string",
          "description": "The locale-code of this language of the translated content. Examples: `en-UK`, `nl-BE`, `fr`, `sr-Cyrl`. <br/>This is conform to how i18n defines locales.<br/>A list of codes can be found at http://www.i18nguy.com/unicode/language-identifiers.html"
        },
        "content": {
          "type": "string",
          "description": "The original text to translate"
        }
      }
    },
    "Suggestion": {
      "type": "object",
      "required": [
        "from_lang",
        "to_lang",
        "orig_content",
        "content",
        "source"
      ],
      "properties": {
        "from_lang": {
          "type": "string",
          "description": "The locale-code of this language of the original content. Examples: `en-UK`, `nl-BE`, `fr`, `sr-Cyrl`. <br/>This is conform to how i18n defines locales.<br/>A list of codes can be found at http://www.i18nguy.com/unicode/language-identifiers.html"
        },
        "to_lang": {
          "type": "string",
          "description": "The locale-code of this language of the translated content. Examples: `en-UK`, `nl-BE`, `fr`, `sr-Cyrl`. <br/>This is conform to how i18n defines locales.<br/>A list of codes can be found at http://www.i18nguy.com/unicode/language-identifiers.html"
        },
        "orig_content": {
          "type": "string",
          "description": "The original text to translate"
        },
        "suggestions": {
          "type": "array",
          "description": "An array of SuggestionItem Models",
          "items": {
            "$ref": "#/definitions/SuggestionItem"
          }
        }
      }
    },
    "SuggestionItem": {
      "type": "object",
      "required": [
        "content",
        "source"
      ],
      "properties": {
        "content": {
          "type": "string",
          "description": "The translated text"
        },
        "source": {
          "type": "string",
          "description": "The source where we got this translation",
          "enum": [
            "local",
            "yandex"
          ]
        }
      }
    },
    "Registration": {
      "type": "object",
      "required": [
        "name",
        "email"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The project name you are requesting"
        },
        "email": {
          "type": "string",
          "description": "Your email address. This is the address we will use to send your API-key"
        }
      }
    },
    "DefaultResponse": {
      "type": "object",
      "description": "When you get get a status-code 200, this is the response you will receive.<br/>\nThe `data` property of this object will contain the specific data you requested: either an array of Models or 1 Model.<br/>\n When the `success` property is `false`, you will find 1 or multiple error-messages in the `msgs` property",
      "required": [
        "success",
        "data",
        "msgs"
      ],
      "properties": {
        "success": {
          "type": "boolean",
          "default": false,
          "description": "Boolean signaling if our call was success (true) or if there's an error (false).<br/>\n When set to true, you will find any response-data in the `data` property and you might have notices/warnings in the `msgs` property.<br/>\n If this is set to false, we expect there are error-messages in the `msgs` property"
        },
        "data": {
          "type": "object",
          "description": "The data payload. This will often be a Model or list of Models"
        },
        "msgs": {
          "type": "array",
          "description": "An array of MessageItems",
          "items": {
            "$ref": "#/definitions/MessageItem"
          }
        }
      }
    },
    "MessageItem": {
      "type": "object",
      "title": "Represents 1 message of the API",
      "required": [
        "type",
        "code",
        "message"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "E",
            "W",
            "S"
          ],
          "description": "Can be one of these 1-character strings:<br/>\n  'E': Error-message,<br/>\n  'W': Warning-message,<br/>\n  'S': Success-message<br/>\n"
        },
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
