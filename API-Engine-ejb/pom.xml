<?xml version="1.0" encoding="UTF-8"?>
<!--
    JBoss, Home of Professional Open Source
    Copyright 2013, Red Hat, Inc. and/or its affiliates, and individual
    contributors by the @authors tag. See the copyright.txt in the
    distribution for a full listing of individual contributors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>API-Engine</artifactId>
        <groupId>com.t1t.digipolis</groupId>
        <version>0.6.3-SNAPSHOT</version>
    </parent>

    <artifactId>API-Engine-ejb</artifactId>
    <packaging>ejb</packaging>

    <name>api-engine-ejb</name>

    <url>http://wildfly.org</url>
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <distribution>repo</distribution>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
        </license>
    </licenses>

    <dependencies>
        <!-- Declare the APIs we depend on and need for compilation. All of 
            them are provided by JBoss WildFly -->
        <!-- Import the EJB API, we use provided scope as the API is included in JBoss WildFly -->
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the CDI API, we use provided scope as the API is included in JBoss WildFly -->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the JPA API, we use provided scope as the API is included in JBoss WildFly -->
        <!--Hibernate-->
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- JSR-303 (Bean Validation) Implementation -->
        <!-- Provides portable constraints such as @Email -->
        <!-- Hibernate Validator is shipped in JBoss WildFly -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Test scope dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Optional, but highly recommended -->
        <!-- Arquillian allows you to test enterprise code such as EJBs and 
            Transactional(JTA) JPA from JUnit/TestNG -->
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <scope>test</scope>
        </dependency>

        <!--jsonschema dependencies-->
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>${commons-lang.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson-databind.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>

        <!--Retrofit rest client-->
        <dependency>
            <groupId>com.squareup.retrofit</groupId>
            <artifactId>retrofit</artifactId>
            <version>${retrofit.version}</version>
        </dependency>

        <!--Typesafe configuration-->
        <dependency>
            <groupId>com.typesafe</groupId>
            <artifactId>config</artifactId>
            <version>${config.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-ext</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>provided</scope>
        </dependency>


        <!--API-beans dependencies-->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <!--<version>1.9.13</version>-->
            <!--<scope>provided</scope>-->
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <!--<version>1.10</version>-->
        </dependency>

        <!--API Config dependencies-->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-configuration</groupId>
            <artifactId>commons-configuration</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-core-asl</artifactId>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mvel</groupId>
            <artifactId>mvel2</artifactId>
        </dependency>

        <!--Picketbox-->
        <dependency>
            <groupId>org.picketbox</groupId>
            <artifactId>jboss-security-spi</artifactId>
            <scope>provided</scope>
        </dependency>

        <!--Infinispan-->
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
            <scope>provided</scope>
        </dependency>

        <!--Keycloak-->
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_3.0_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!--Apache http-->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
        </dependency>

        <!--Jest client-->
        <dependency>
            <groupId>org.elasticsearch</groupId>
            <artifactId>elasticsearch</artifactId>
        </dependency>
        <dependency>
            <groupId>io.searchbox</groupId>
            <artifactId>jest</artifactId>
        </dependency>

        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-parser</artifactId>
        </dependency>

        <!--OpenSAML-->
        <dependency>
            <groupId>org.opensaml</groupId>
            <artifactId>opensaml</artifactId>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.188</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jglue.cdi-unit</groupId>
            <artifactId>cdi-unit</artifactId>
            <version>3.1.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
        </dependency>
        <dependency>
            <groupId>org.bitbucket.b_c</groupId>
            <artifactId>jose4j</artifactId>
            <version>${jose4j.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${version.commons-codec}</version>
        </dependency>

        <!-- Arquillian allows you to test enterprise code such as EJBs and Transactional(JTA) JPA from JUnit/TestNG -->
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-weld-ee-embedded-1.1</artifactId>
            <version>1.0.0.CR3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-core</artifactId>
            <version>1.1.5.Final</version>
            <scope>test</scope>
        </dependency>

        <!--Hystrix-->
        <dependency>
            <groupId>com.netflix.hystrix</groupId>
            <artifactId>hystrix-core</artifactId>
        </dependency>

        <!--Infinspan-->
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
        </dependency>

    </dependencies>
    <build>
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources-filtered</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.java</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <artifactId>maven-ejb-plugin</artifactId>
                <version>${version.ejb.plugin}</version>
                <configuration>
                    <!--export infinispan-->
                    <archive>
                        <manifestEntries>
                            <Dependencies>org.infinispan export</Dependencies>
                        </manifestEntries>
                    </archive>
                    <!-- Tell Maven we are using EJB 3.1 -->
                    <ejbVersion>3.1</ejbVersion>
                </configuration>
            </plugin>
            <plugin>
                <!--See: https://github.com/joelittlejohn/jsonschema2pojo/wiki/Reference-->
                <groupId>org.jsonschema2pojo</groupId>
                <artifactId>jsonschema2pojo-maven-plugin</artifactId>
                <version>0.4.13</version>
                <configuration>
                    <addCompileSourceRoot>true</addCompileSourceRoot>
                    <!--<sourceDirectory>${basedir}/src/main/resources/schema</sourceDirectory>-->
                    <!--We didn't provided the sourceDirectory, because one schema -> KongConfigValue must be an interface and always gets generated as an abstract class, annoying stuff!-->
                    <sourcePaths>
                        <sourcePath>${basedir}/src/main/resources/schema/KongApi.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongApiList.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongConsumer.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongConsumerList.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongInfo.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongInstalledPlugins.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginBasicAuth.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginConfig.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginConfigList.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginCors.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginFileLog.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginHttpLog.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginIPRestriction.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginKeyAuth.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginKeyAuthRequest.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginOAuthScope.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginOAuth.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginOAuthEnhanced.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginRateLimiting.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginRequestSizeLimiting.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginRequestTransformerAdd.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginRequestTransformerRemove.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginRequestTransformer.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginResponseTransformerRemove.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginResponseTransformerAdd.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginResponseTransformer.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginSchema.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginSSL.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginTcpLog.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginUdpLog.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongStatus.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginKeyAuthResponse.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginKeyAuthResponseList.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginAnalytics.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginBasicAuthRequest.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginBasicAuthResponse.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginBasicAuthResponseList.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/MetricsUsage.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/MetricsUsageList.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/MetricsResponseStats.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/MetricsResponseStatsList.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/MetricsResponseSummary.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/MetricsResponseSummaryList.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/MetricsConsumerUsage.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/MetricsConsumerUsageList.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/MetricsServiceConsumerList.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginOAuthConsumerRequest.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginOAuthConsumerResponse.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginOAuthConsumerResponseList.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginJWTResponse.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginJWTRequest.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginJWTResponseList.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema/KongPluginJWT.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema_scim/SCIMUser.json</sourcePath>
                        <sourcePath>${basedir}/src/main/resources/schema_scim/SCIMUserList.json</sourcePath>
                    </sourcePaths>
                    <targetPackage>com.t1t.digipolis.kong.model</targetPackage>
                    <sourceType>jsonschema</sourceType>
                    <annotationStyle>gson</annotationStyle>
                    <generateBuilders>true</generateBuilders>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.9.1</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>target/generated-sources/xjc</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- The default profile skips all tests, though you can tune it 
                to run just unit tests based on a custom pattern -->
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <appconfig.file>application</appconfig.file>
            </properties>
        </profile>
        <profile>
            <id>docker</id>
            <properties>
                <appconfig.file>application-docker</appconfig.file>
            </properties>
        </profile>
        <profile>
            <id>t1t-dev</id>
            <properties>
                <appconfig.file>application-t1t-dev</appconfig.file>
            </properties>
        </profile>
        <profile>
            <id>t1t-prd</id>
            <properties>
                <appconfig.file>application-t1t-prd</appconfig.file>
            </properties>
        </profile>
        <profile>
            <id>digi-dev</id>
            <properties>
                <appconfig.file>application-digi-dev</appconfig.file>
            </properties>
        </profile>
        <profile>
            <id>digi-acc</id>
            <properties>
                <appconfig.file>application-digi-acc</appconfig.file>
            </properties>
        </profile>
        <profile>
            <id>digi-prod</id>
            <properties>
                <appconfig.file>application-digi-prod</appconfig.file>
            </properties>
        </profile>
    </profiles>

</project>
